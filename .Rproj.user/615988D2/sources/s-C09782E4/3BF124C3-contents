---
title: "Clustering Magic The Gathering Cards"
author: "Patricia e Felipe"
date: "1 de abril de 2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)

if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(cluster)){install.packages("cluster")}
if(!require(NbClust)){install.packages("NbClust")}
if(!require(pvclust)){install.packages('pvclust')}
if(!require(ggplot2)){install.packages('ggplot2')}
#if(!require(gridExtra)){install.packages('gridExtra')}
if(!require(plotly)){install.packages('plotly')}

```

```{r Funções utilizadas no Gráfico de Cotovelo, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

# within sum of squares
wss <- function(d) {
  sum(scale(d, scale = FALSE)^2)
}

# wrap the data
wrap <- function(i, hc, x) {
  cl <- cutree(hc, i)
  spl <- split(x, cl)
  wss <- sum(sapply(spl, wss))
  wss
}

elbow_plot<- function(data, dissim,met){
  cl = hclust(dissim, method = met)  
  res <- sapply(seq.int(1, nrow(data)), 
                wrap, h =cl, 
                x = data)
  return(res)
}
```


##### **Sumário**

**1.** Introdução  
**2.** Definição do grupo de dados  
**3.** Definição do método de agrupamento e critério de dissimilaridade 
**4.** Definição da quantidade de Grupos  
**5.** Conclusão  

&nbsp;
&nbsp;


```{r echo=FALSE}
Cards <- read.csv("C:/Users/Patricia/Google Drive/Cruzeiro/12. Analise de Cluster/Base Magic/AllCards.json/mtg_creatures.csv", sep=";")

data.cards <- Cards[,c(5,6,8)] %>% unique
names(data.cards)[3]<- 'Cost'

data.cards$power <- data.cards$power %>%  as.character %>% as.integer
data.cards$toughness <- data.cards$toughness %>%  as.character %>% as.integer
data.cards$Cost <- data.cards$Cost %>%  as.character %>% as.integer

data.cards <- na.omit(data.cards)

```


#### 1. Introdução  

*Felipe ja escreveu*

&nbsp;
&nbsp;

#### 2. Definição do grupo de dados 

Buscando selecionar um grupo de cartas com estruturas semelhantes e variáveis numéricas para que possamos realizar a análise de agrupamentos, utilizaremos neste estudo somente as cartas do tipo "Criatura". Cada uma delas representa um personagem no universo do jogo e possuem as características abaixo:


Variável      | Descrição
------------- | ---------------------
Power         | Força de Ataque
Toughness     | Força de Defesa 
Mana Cost     | Custo de Utilização


O objetivo do agrupamento será classificar as cartas em categorias onde as criaturas se assemelhem em suas aplicações estratégias do jogo. A quantidade e definição dos grupos não está pré definida.

&nbsp;
&nbsp;
&nbsp;

De um total de 8370 criaturas disponíveis na base de dados, foi relizado um tratamento para que houvesse somente um elemento com cada combinação única das três variáveis. Após o tratamento, o arquivo utilizado para o estudo tinha disponível 380 elementos., uma quantidade grande o suficiente para prosseguirmos com as análises.

Visualização das observações:

&nbsp;


```{r 3D, message=FALSE, warning=FALSE, paged.print=FALSE}
p <-  plot_ly(x=data.cards$power, y=data.cards$toughness, z=data.cards$Cost, 
        type="scatter3d", 
        mode="markers", 
        colors='bluestell',
        size = 2) %>%
    layout(title = 'Criaturas Magic ',
         scene = list(xaxis = list(title = 'Power'),
                      yaxis = list(title = 'Toughness'),
                      zaxis = list(title = 'Cost'),
         plot_bgcolor = 'rgb(243, 243, 243)'))
p
```

MAtriz de Correlação:

&nbsp;


```{r matriz de correlação, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

library(corrplot)
cor <- cor(data.cards)
#cor
corrplot.mixed(cor, tl.col = "black")
```


Podemos observar também que existe uma correlação média entre as variáveis. Segundo Hair (pg 446), a medida de distancia  de Mahalanobis é mais adequada quando as variáveis são altamente correlacionadas, seguiremos, portanto, utilizando a medida de distância Euclidiana.

&nbsp;
&nbsp;


#### 3. Definição do método de agrupamento e critério de dissimilaridade

&nbsp;

Neste estudo, a similaridade entre as observações será medida de acordo com a distância euclidiana em cada par de observações, com base nas variáveis Power, Tougness e Cost, no espaço tridimencional, onde as distancias menores vão representar maior similaridade.

Como não está pré-definida a quantidade de grupos, realizaremos uma comparação entre métodos hierárquicos Ward, UPGMA, WPGMA, WPGMC, e UPGMC.

&nbsp;

```{r Calculo Cotovelo (DEMORA), echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
### Calculando Gráfico de Cotovelo

dis_euclidiana <- dist(data.cards, method="euclidean")


elbow_data<-data.frame(ward = elbow_plot(data=data.cards, dissim= dis_euclidiana, 
                                         met = "ward.D"),
                       upgma = elbow_plot(data=data.cards,dissim= dis_euclidiana, 
                                          met = "average"),
                       wpgmc = elbow_plot(data=data.cards,dissim= dis_euclidiana, 
                                          met = "median"),
                       wpgma = elbow_plot(data=data.cards,dissim= dis_euclidiana, 
                                          met = "mcquitty"),
                       upgmc = elbow_plot(data=data.cards,dissim= dis_euclidiana, 
                                          met = "centroid"),
                       k = seq.int(1, nrow(data.cards))) %>%
   gather(key="Metodo",value="WSS",-k)


elbow_data <- elbow_data %>% filter(k<=30)

```

```{r Plotando Cotovelo, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}

ggplot(elbow_data %>% filter(k<=20), 
                    aes(x=k,y=WSS, 
                       group=Metodo, 
                       color=Metodo, 
                       alpha = 0.8)) +
  geom_line(size=1.5 ,linetype = 1) + theme_bw()

```

A visualização hierárquica dos métodos pode ser visualizada na figura abaixo
&nbsp;


```{r Calculando clusteres hierárquicos, echo=FALSE}

ward <-hclust(dis_euclidiana, method = 'ward.D2')
upgma<-hclust(dis_euclidiana, method = 'average')
wpgmc<-hclust(dis_euclidiana, method = 'median')
wpgma<-hclust(dis_euclidiana, method = 'mcquitty')
upgmc<-hclust(dis_euclidiana, method = 'centroid')

```

```{r Hierarquias, echo=FALSE, message=FALSE, warning=FALSE}

par(mfrow=c(2,3))
plot(ward , main = 'Ward')
plot(upgma, main = 'UPGMA')
plot(wpgmc, main = 'WPGMC')
plot(wpgma, main = 'WPGMA')
plot(upgmc, main = 'UPGMC')
par(mfrow=c(1,1))
```
&nbsp;

Observando a curvatura do gráfico de cotovelo e a distribuição observações na hierarquia dos diferentes métodos, vamos criar 5 clusters utilizando o método de Ward.

&nbsp;

```{r Ward, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
#Cortando a arvore ward em 4 grupos 
grupos.ward <- cutree(ward, k=5)
table(grupos.ward)

```

Visualização dos Grupos no espaço tridimensional:

&nbsp;
&nbsp;


```{r echo=FALSE, message=FALSE, warning=FALSE}
# vendo dados agrupados pelo ward - 5 grupos
p2 <-  plot_ly(x=data.cards$power, y=data.cards$toughness, z=data.cards$Cost, 
              type="scatter3d", 
              mode="markers", 
              color= as.factor(grupos.ward),
              size = 2) %>%
  layout(title = 'Criaturas Magic - Clusterização Método Ward',
         scene = list(xaxis = list(title = 'Power'),
                      yaxis = list(title = 'Toughness'),
                      zaxis = list(title = 'Cost')))


p2
```


&nbsp;


Visualizando as características de cada grupo individualmente:
&nbsp;
&nbsp;


```{r Comparativo Grupos, message=FALSE, warning=FALSE, paged.print=FALSE}

#arrumando os dados
box.data <- data.cards
box.data$Grupos <- paste('Grupo', grupos.ward) %>% as.factor

#head(box.data)
#summary(box.data)

box.data.g <-  box.data %>% gather(key = 'Medida',value = 'Valor', 1:3)

#plot
plot_ly(y = box.data.g$Grupos, 
        x=box.data.g$Valor, 
        type = "box", 
        color = box.data.g$Medida) %>%
  layout(boxmode = "group")
```

Observando as características dos grupos, podemos descreve-los 


- Grupo 1: Linha de Frente
- Grupo 2: Defensivas
- Grupo 3: Intermediárias
- Grupo 4: Agressivas
- Grupo 5: Monstruosas

&nbsp;
&nbsp;


#### 5. Conclusão  

