spl <- split(x, cl)
wss <- sum(sapply(spl, wss))
wss
}
elbow_plot<- function(data, dissim,met){
cl = hclust(dissim, method = met)
res <- sapply(seq.int(1, nrow(data)),
wrap, h =cl,
x = data)
return(res)
}
fit2$scores
---
title: "ACP Boletins"
author: "Patricia Felipe e Leandro"
date: "11 de junho de 2019"
output: html_document
---
Carregando Pacotes:
```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(corrplot)
library(psych)
library(knitr)
```
Lendo Arquivo:
```{r}
dados <- read.csv2('base_boletins_tcc.csv', sep=';')
glimpse(dados)
```
Escalonamento:
```{r message=FALSE, warning=FALSE, paged.print=FALSE}
dados.scale <- scale(dados[,-c(1:2)]) %>% as.data.frame()
```
Teste de esfericidade
```{r message=FALSE, warning=FALSE, paged.print=FALSE}
bartlett.test(dados)
bartlett.test(dados.scale)
```
Correlações
```{r}
#cor(dados.scale)
corrplot(cor(dados.scale), type="upper")
```
```{r}
# Ajuste do modelo - escolha do numero de componentes
fit1 <- princomp(dados.scale, cor=TRUE)
summary(fit1)
```
```{r}
# Scree Plot
plot(fit1, type="lines")
```
Seguindo a Análise com 6 componentes:
```{r message=FALSE, warning=FALSE, paged.print=FALSE}
fit2 <- principal(dados.scale, covar = FALSE, nfactors = 5)
fit2
```
```{r}
corrplot(t(fit2$loadings))
```
Relações:
RC1:
<br>**X1** - Estupro
<br>**X2** - Estupro de Vulnerável
<br>**X6** - HOMICÍDIO CULPOSO POR ACIDENTE DE TRÂNSITO
<br>**X11** - LESÃO CORPORAL DOLOSA
<br>**x15** - ROUBO DE CARGA
<br>**x17** - Homicidio doloso exceto transito
RC4:
<br>**X3** - FURTO OUTROS *NEGATIVO*
<br>**X4** - FURTO DE VEÍCULO
<br>**10** - LESÃO CORPORAL CULPOSA POR ACIDENTE DE TRÂNSITO
RC2:
<br>**X9** - LESÃO CORPORAL CULPOSA - OUTRAS
<br>**X14**- ROUBO A BANCO
<br>**X16**- ROUBO DE VEÍCULO *NEGATIVO*
RC3:
<br>**X5** - HOMICÍDIO CULPOSO OUTROS
<br>**X12** - LESÃO CORPORAL SEGUIDA DE MORTE
RC5:
<br>**X7** - HOMICÍDIO DOLOSO POR ACIDENTE DE TRÂNSITO
<br>**X13** - ROUBO - OUTROS
fit2$scores
dados[,[1:2]]
dados[,1:2]
base_acp_scores <-
cbind( dados[,1:2],
fit2$scores)
head(base_acp_scores)
write.csv2(dados.join, 'base_acp_scores.csv',row.names=FALSE)
write.csv2(base_acp_scores, 'base_acp_scores.csv',row.names=FALSE)
dados.acp <- read.csv2('base_acp_scores.csv', sep=';')
glimpse(dados)
glimpse(dados.acp)
# within sum of squares
wss <- function(d) {
sum(scale(d, scale = FALSE)^2)
}
# wrap the data
wrap <- function(i, hc, x) {
cl <- cutree(hc, i)
spl <- split(x, cl)
wss <- sum(sapply(spl, wss))
wss
}
elbow_plot<- function(data, dissim,met){
cl = hclust(dissim, method = met)
res <- sapply(seq.int(1, nrow(data)),
wrap, h =cl,
x = data)
return(res)
}
knitr::opts_chunk$set(echo = FALSE)
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(cluster)){install.packages("cluster")}
if(!require(NbClust)){install.packages("NbClust")}
if(!require(pvclust)){install.packages('pvclust')}
if(!require(ggplot2)){install.packages('ggplot2')}
#if(!require(gridExtra)){install.packages('gridExtra')}
if(!require(plotly)){install.packages('plotly')}
library(corrplot)
cor <- cor(dados.acp)
cor <- cor(dados.acp[,3:7])
#cor
corrplot.mixed(cor, tl.col = "black")
library(corrplot)
cor <- cor(dados.acp[,3:7])
cor
corrplot.mixed(cor, tl.col = "black")
cor <- cor(t(dados.acp[,3:7]))
cor
library(corrplot)
cor <- cor(t(dados.acp[,3:7]))
#cor
corrplot.mixed(cor, tl.col = "black")
cor <- cor(dados.acp[,3:7])
cor
#cor
corrplot.mixed(cor, tl.col = "black")
?corrplot
library(corrplot)
cor <- cor(t(dados.acp[,3:7]))
#cor
#corrplot.mixed(cor, tl.col = "black")
corrplot(cor, tl.col = "black")
corrplot(cor, tl.col = "black")
dados.acp.num <- dados.acp[,3:7]
dis_euclidiana <- dist(dados.acp.num, method="euclidean")
nrow(data.cards)
elbow_data<-data.frame(ward = elbow_plot(data=dados.acp.num, dissim= dis_euclidiana,
met = "ward.D"),
upgma = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "average"),
wpgmc = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "median"),
wpgma = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "mcquitty"),
upgmc = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "centroid"),
k = seq.int(1, nrow(dados.acp.num))) %>%
gather(key="Metodo",value="WSS",-k)
elbow_data <- elbow_data %>% filter(k<=30)
ggplot(elbow_data %>% filter(k<=20),
aes(x=k,y=WSS,
group=Metodo,
color=Metodo,
alpha = 0.8)) +
geom_line(size=1.5 ,linetype = 1) + theme_bw()
?dist
ward <-hclust(dis_euclidiana, method = 'ward.D2')
upgma<-hclust(dis_euclidiana, method = 'average')
wpgmc<-hclust(dis_euclidiana, method = 'median')
wpgma<-hclust(dis_euclidiana, method = 'mcquitty')
upgmc<-hclust(dis_euclidiana, method = 'centroid')
par(mfrow=c(2,3))
plot(ward , main = 'Ward')
plot(upgma, main = 'UPGMA')
plot(wpgmc, main = 'WPGMC')
plot(wpgma, main = 'WPGMA')
plot(upgmc, main = 'UPGMC')
par(mfrow=c(1,1))
par(mfrow=c(2,3))
plot(ward , main = 'Ward')
plot(upgma, main = 'UPGMA')
plot(wpgmc, main = 'WPGMC')
plot(wpgma, main = 'WPGMA')
plot(upgmc, main = 'UPGMC')
par(mfrow=c(1,1))
plot(ward , main = 'Ward')
grupos.ward <- cutree(ward, k=6)
table(grupos.ward)
qplot(table(grupos.ward))
grupos.ward <- cutree(ward, k=6)
table(grupos.ward)
plot(table(grupos.ward))
grupos.ward <- cutree(ward, k=6)
table(grupos.ward)
qplot(table(grupos.ward))
grupos.ward <- cutree(ward, k=6)
table(grupos.ward)
qplot(t(table(grupos.ward)))
grupos.ward <- cutree(ward, k=6)
table(grupos.ward)
qplot(table(grupos.ward))
grupos.ward <- cutree(ward, k=6)
table(grupos.ward)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward)
qplot(table.ward[,1],table.ward[,2])
table.ward[,1]
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward)
table.ward[1]
t(table.ward)[1]
t(table.ward)
table.ward
View(table.ward)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward)
table.ward$freq
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
View(table.ward)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(table.ward)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(table.ward$Freq)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(table.ward$Freq, 1:6)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(1:6, table.ward$Freq)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
plot(1:6, table.ward$Freq)
?qplot
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(1:6, table.ward$Freq, geom ='histogram')
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(1:6, table.ward$Freq, geom ='histogram')
?plot
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
plot(1:6, table.ward$Freq, type ='h')
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
hist(1:6, table.ward$Freq)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
qplot(1:6, table.ward$Freq)
?plot_ly
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
#qplot(1:6, table.ward$Freq)
plot_ly(x=1:6, y=table.ward$Freq)
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
#qplot(1:6, table.ward$Freq)
plot_ly(x=1:6, y=table.ward$Freq,
type="bar" )
grupos.ward <- cutree(ward, k=5)
table.ward <- table(grupos.ward) %>% data.frame
plot_ly(x=1:6, y=table.ward$Freq, type="bar" )
grupos.ward <- cutree(ward, k=5)
table.ward <- table(grupos.ward) %>% data.frame
plot_ly(x=1:5, y=table.ward$Freq, type="bar" )
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
plot_ly(x=1:6, y=table.ward$Freq, type="bar" )
grupos.ward <- cutree(ward, k=5)
table.ward <- table(grupos.ward) %>% data.frame
plot_ly(x=1:5, y=table.ward$Freq, type="bar" )
grupos.ward <- cutree(ward, k=5)
table.ward <- table(grupos.ward) %>% data.frame
table.ward
plot_ly(x=1:5, y=table.ward$Freq, type="bar" )
knitr::opts_chunk$set(echo = FALSE)
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(cluster)){install.packages("cluster")}
if(!require(NbClust)){install.packages("NbClust")}
if(!require(pvclust)){install.packages('pvclust')}
if(!require(ggplot2)){install.packages('ggplot2')}
#if(!require(gridExtra)){install.packages('gridExtra')}
if(!require(plotly)){install.packages('plotly')}
# within sum of squares
wss <- function(d) {
sum(scale(d, scale = FALSE)^2)
}
# wrap the data
wrap <- function(i, hc, x) {
cl <- cutree(hc, i)
spl <- split(x, cl)
wss <- sum(sapply(spl, wss))
wss
}
elbow_plot<- function(data, dissim,met){
cl = hclust(dissim, method = met)
res <- sapply(seq.int(1, nrow(data)),
wrap, h =cl,
x = data)
return(res)
}
dados.acp <- read.csv2('base_acp_scores.csv', sep=';')
glimpse(dados.acp)
library(corrplot)
cor <- cor(t(dados.acp[,3:7]))
#cor
#corrplot.mixed(cor, tl.col = "black")
corrplot(cor, tl.col = "black")
dados.acp.num <- dados.acp[,3:7]
dis_euclidiana <- dist(dados.acp.num, method="euclidean")
elbow_data<-data.frame(ward = elbow_plot(data=dados.acp.num, dissim= dis_euclidiana,
met = "ward.D"),
upgma = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "average"),
wpgmc = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "median"),
wpgma = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "mcquitty"),
upgmc = elbow_plot(data=dados.acp.num,dissim= dis_euclidiana,
met = "centroid"),
k = seq.int(1, nrow(dados.acp.num))) %>%
gather(key="Metodo",value="WSS",-k)
elbow_data <- elbow_data %>% filter(k<=30)
ggplot(elbow_data %>% filter(k<=20),
aes(x=k,y=WSS,
group=Metodo,
color=Metodo,
alpha = 0.8)) +
geom_line(size=1.5 ,linetype = 1) + theme_bw()
ward <-hclust(dis_euclidiana, method = 'ward.D2')
upgma<-hclust(dis_euclidiana, method = 'average')
wpgmc<-hclust(dis_euclidiana, method = 'median')
wpgma<-hclust(dis_euclidiana, method = 'mcquitty')
upgmc<-hclust(dis_euclidiana, method = 'centroid')
par(mfrow=c(2,3))
plot(ward , main = 'Ward')
plot(upgma, main = 'UPGMA')
plot(wpgmc, main = 'WPGMC')
plot(wpgma, main = 'WPGMA')
plot(upgmc, main = 'UPGMC')
par(mfrow=c(1,1))
plot(ward , main = 'Ward')
grupos.ward <- cutree(ward, k=5)
table.ward <- table(grupos.ward) %>% data.frame
table.ward
plot_ly(x=1:5, y=table.ward$Freq, type="bar" )
grupos.ward
cbind(
dados.acp.num,
grupos.ward)
cbind(
dados.acp,
grupos.ward)
write.csv2('result_cluster.csv',
cbind(
dados.acp,
grupos.ward)
)
write.csv2('result_cluster.csv',
data.frame(cbind(
dados.acp,
grupos.ward))
)
result <- cbind(
dados.acp,
grupos.ward)
write.csv2(result, 'result_cluster.csv')
head(cor)
summary(head(cor))
summary(as.vector(cor))
abs(-1)
summary(abs(as.vector(cor))
summary(abs(as.vector(cor))
summary(abs(as.vector(cor)))
hist(abs(as.vector(cor)))
summary(abs(as.vector(cor)))
hist(as.vector(cor))
hist(abs(as.vector(cor)))
View(dados.acp.num)
knitr::opts_chunk$set(echo = FALSE)
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(cluster)){install.packages("cluster")}
if(!require(NbClust)){install.packages("NbClust")}
if(!require(pvclust)){install.packages('pvclust')}
if(!require(ggplot2)){install.packages('ggplot2')}
#if(!require(gridExtra)){install.packages('gridExtra')}
if(!require(plotly)){install.packages('plotly')}
# within sum of squares
wss <- function(d) {
sum(scale(d, scale = FALSE)^2)
}
# wrap the data
wrap <- function(i, hc, x) {
cl <- cutree(hc, i)
spl <- split(x, cl)
wss <- sum(sapply(spl, wss))
wss
}
elbow_plot<- function(data, dissim,met){
cl = hclust(dissim, method = met)
res <- sapply(seq.int(1, nrow(data)),
wrap, h =cl,
x = data)
return(res)
}
dados <- read.csv2('base_boletins_tcc.csv', sep=';')
glimpse(dados)
View(dados)
dados.scale <- scale(dados[,-c(1:2)]) %>% as.data.frame()
dados.scale <- scale(dados[,-c(1:2)]) %>% as.data.frame()
head(dados.scale)
library(corrplot)
cor <- cor(t(dados))
library(corrplot)
cor <- cor(t(dados.scale))
#cor
#corrplot.mixed(cor, tl.col = "black")
corrplot(cor, tl.col = "black")
summary(abs(as.vector(cor)))
hist(as.vector(cor))
hist(abs(as.vector(cor)))
dis_euclidiana <- dist(dados.acp.num, method="euclidean")
dis_euclidiana <- dist(dados.scale, method="euclidean")
elbow_data<-data.frame(ward = elbow_plot(data=dados.scale, dissim= dis_euclidiana,
met = "ward.D"),
upgma = elbow_plot(data=dados.scale,dissim= dis_euclidiana,
met = "average"),
wpgmc = elbow_plot(data=dados.scale,dissim= dis_euclidiana,
met = "median"),
wpgma = elbow_plot(data=dados.scale,dissim= dis_euclidiana,
met = "mcquitty"),
upgmc = elbow_plot(data=dados.scale,dissim= dis_euclidiana,
met = "centroid"),
k = seq.int(1, nrow(dados.scale))) %>%
gather(key="Metodo",value="WSS",-k)
elbow_data <- elbow_data %>% filter(k<=30)
ggplot(elbow_data %>% filter(k<=20),
aes(x=k,y=WSS,
group=Metodo,
color=Metodo,
alpha = 0.8)) +
geom_line(size=1.5 ,linetype = 1) + theme_bw()
ward <-hclust(dis_euclidiana, method = 'ward.D2')
upgma<-hclust(dis_euclidiana, method = 'average')
wpgmc<-hclust(dis_euclidiana, method = 'median')
wpgma<-hclust(dis_euclidiana, method = 'mcquitty')
upgmc<-hclust(dis_euclidiana, method = 'centroid')
par(mfrow=c(2,3))
plot(ward , main = 'Ward')
plot(upgma, main = 'UPGMA')
plot(wpgmc, main = 'WPGMC')
plot(wpgma, main = 'WPGMA')
plot(upgmc, main = 'UPGMC')
par(mfrow=c(1,1))
plot(ward , main = 'Ward')
grupos.ward <- cutree(ward, k=6)
table.ward <- table(grupos.ward) %>% data.frame
table.ward
plot_ly(x=1:5, y=table.ward$Freq, type="bar" )
grupos.ward <- cutree(ward, k=5)
table.ward <- table(grupos.ward) %>% data.frame
table.ward
plot_ly(x=1:5, y=table.ward$Freq, type="bar" )
result <- cbind(
dados.acp,
grupos.ward)
result <- cbind(
dados,
grupos.ward)
write.csv2(result, 'result_cluster_Sem_acp.csv')
View(result)
library(tidyverse)
library(corrplot)
library(psych)
library(knitr)
dados <- read.csv2('base_boletins_tcc.csv', sep=';')
glimpse(dados)
dados.scale <- scale(dados[,-c(1:2)]) %>% as.data.frame()
bartlett.test(dados)
bartlett.test(dados.scale)
#cor(dados.scale)
corrplot(cor(dados.scale), type="upper")
# Ajuste do modelo - escolha do numero de componentes
fit1 <- princomp(dados.scale, cor=TRUE)
summary(fit1)
# Scree Plot
plot(fit1, type="lines")
fit2 <- principal(dados.scale, covar = FALSE, nfactors = 5, rotate='oblimin')
fit2
corrplot(t(fit2$loadings))
fit_sem_rotacao <- principal(dados.scale, covar = FALSE, nfactors = 5, rotate='none')
fit_oblimin     <- principal(dados.scale, covar = FALSE, nfactors = 5, rotate='oblimin')
fit_oblimin
rm(fit1)
rm(fit2)
fit_sem_rotacao <- principal(dados.scale, covar = FALSE, nfactors = 5, rotate='none')
fit_oblimin     <- principal(dados.scale, covar = FALSE, nfactors = 5, rotate='oblimin')
fit_oblimin
corrplot(t(fit_sem_rotacao$loadings))
corrplot(t(fit_oblimin$loadings))
fit_sem_rotacao <- principal(dados.scale, covar = FALSE, nfactors = 5)
fit_oblimin     <- principal(dados.scale, covar = FALSE, nfactors = 5, rotate='oblimin')
fit_oblimin
corrplot(t(fit_sem_rotacao$loadings))
corrplot(t(fit_oblimin$loadings))
