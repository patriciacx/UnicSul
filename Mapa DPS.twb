<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='LocDPS' inline='true' name='federated.07z0t971dztbyx191md251dtq31w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LocDPS' name='textscan.040lnqf10ds6oo13yq2fm1kvvwqy'>
            <connection class='textscan' directory='C:/Users/Patricia/Documents/GitHub/UnicSul' filename='LocDPS.csv' password='' server='' />
          </named-connection>
          <named-connection caption='result_cluster' name='textscan.1c6mc6k0psnebd1ctdrtp1qbjep8'>
            <connection class='textscan' directory='C:/Users/Patricia/Documents/GitHub/UnicSul' filename='result_cluster.csv' password='' server='' />
          </named-connection>
          <named-connection caption='base_boletins_tcc' name='textscan.1thlpve0r29ftp12r8gs30ylmbwy'>
            <connection class='textscan' directory='C:/Users/Patricia/Documents/GitHub/UnicSul' filename='base_boletins_tcc.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[LocDPS.csv].[cod]' />
              <expression op='[base_boletins_tcc.csv].[delegacia_id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[LocDPS.csv].[cod]' />
                <expression op='[result_cluster.csv].[delegacia_id]' />
              </expression>
            </clause>
            <relation connection='textscan.040lnqf10ds6oo13yq2fm1kvvwqy' name='LocDPS.csv' table='[LocDPS#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='pt_BR' separator=';'>
                <column datatype='integer' name='cod' ordinal='0' />
                <column datatype='string' name='delegacia' ordinal='1' />
                <column datatype='real' name='Latitude' ordinal='2' />
                <column datatype='real' name='Longitude' ordinal='3' />
                <column datatype='string' name='F5' ordinal='4' />
                <column datatype='integer' name='F6' ordinal='5' />
                <column datatype='integer' name='F7' ordinal='6' />
                <column datatype='string' name='F8' ordinal='7' />
                <column datatype='integer' name='F9' ordinal='8' />
              </columns>
            </relation>
            <relation connection='textscan.1c6mc6k0psnebd1ctdrtp1qbjep8' name='result_cluster.csv' table='[result_cluster#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='pt_BR' separator=';'>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='integer' name='delegacia_id' ordinal='1' />
                <column datatype='string' name='delegacia' ordinal='2' />
                <column datatype='real' name='RC1' ordinal='3' />
                <column datatype='real' name='RC2' ordinal='4' />
                <column datatype='real' name='RC3' ordinal='5' />
                <column datatype='real' name='RC4' ordinal='6' />
                <column datatype='integer' name='grupos.ward' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1thlpve0r29ftp12r8gs30ylmbwy' name='base_boletins_tcc.csv' table='[base_boletins_tcc#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='pt_BR' separator=';'>
              <column datatype='integer' name='delegacia_id' ordinal='0' />
              <column datatype='string' name='delegacia' ordinal='1' />
              <column datatype='integer' name='X1' ordinal='2' />
              <column datatype='integer' name='X2' ordinal='3' />
              <column datatype='real' name='X3' ordinal='4' />
              <column datatype='real' name='X4' ordinal='5' />
              <column datatype='integer' name='X5' ordinal='6' />
              <column datatype='integer' name='X6' ordinal='7' />
              <column datatype='integer' name='X7' ordinal='8' />
              <column datatype='integer' name='X8' ordinal='9' />
              <column datatype='integer' name='X9' ordinal='10' />
              <column datatype='integer' name='X10' ordinal='11' />
              <column datatype='integer' name='X11' ordinal='12' />
              <column datatype='integer' name='X12' ordinal='13' />
              <column datatype='real' name='X13' ordinal='14' />
              <column datatype='integer' name='X14' ordinal='15' />
              <column datatype='integer' name='X15' ordinal='16' />
              <column datatype='integer' name='X16' ordinal='17' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[result_cluster.csv].[F1]' />
          <map key='[F5]' value='[LocDPS.csv].[F5]' />
          <map key='[F6]' value='[LocDPS.csv].[F6]' />
          <map key='[F7]' value='[LocDPS.csv].[F7]' />
          <map key='[F8]' value='[LocDPS.csv].[F8]' />
          <map key='[F9]' value='[LocDPS.csv].[F9]' />
          <map key='[Latitude]' value='[LocDPS.csv].[Latitude]' />
          <map key='[Longitude]' value='[LocDPS.csv].[Longitude]' />
          <map key='[RC1]' value='[result_cluster.csv].[RC1]' />
          <map key='[RC2]' value='[result_cluster.csv].[RC2]' />
          <map key='[RC3]' value='[result_cluster.csv].[RC3]' />
          <map key='[RC4]' value='[result_cluster.csv].[RC4]' />
          <map key='[X1 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X1]' />
          <map key='[X10 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X10]' />
          <map key='[X11 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X11]' />
          <map key='[X12 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X12]' />
          <map key='[X13 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X13]' />
          <map key='[X14 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X14]' />
          <map key='[X15 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X15]' />
          <map key='[X16]' value='[base_boletins_tcc.csv].[X16]' />
          <map key='[X2 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X2]' />
          <map key='[X3 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X3]' />
          <map key='[X4 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X4]' />
          <map key='[X5 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X5]' />
          <map key='[X6 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X6]' />
          <map key='[X7 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X7]' />
          <map key='[X8 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X8]' />
          <map key='[X9 (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[X9]' />
          <map key='[cod]' value='[LocDPS.csv].[cod]' />
          <map key='[delegacia (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[delegacia]' />
          <map key='[delegacia (result_cluster.csv)]' value='[result_cluster.csv].[delegacia]' />
          <map key='[delegacia]' value='[LocDPS.csv].[delegacia]' />
          <map key='[delegacia_id (base_boletins_tcc.csv)]' value='[base_boletins_tcc.csv].[delegacia_id]' />
          <map key='[delegacia_id]' value='[result_cluster.csv].[delegacia_id]' />
          <map key='[grupos.ward]' value='[result_cluster.csv].[grupos.ward]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cod</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cod]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>cod</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delegacia</remote-name>
            <remote-type>129</remote-type>
            <local-name>[delegacia]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>delegacia</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[LocDPS.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delegacia_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delegacia_id]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>delegacia_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delegacia</remote-name>
            <remote-type>129</remote-type>
            <local-name>[delegacia (result_cluster.csv)]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>delegacia</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RC1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RC1]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>RC1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RC2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RC2]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>RC2</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RC3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RC3]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>RC3</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RC4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RC4]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>RC4</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grupos.ward</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grupos.ward]</local-name>
            <parent-name>[result_cluster.csv]</parent-name>
            <remote-alias>grupos.ward</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delegacia_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delegacia_id (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>delegacia_id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delegacia</remote-name>
            <remote-type>129</remote-type>
            <local-name>[delegacia (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>delegacia</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X1 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X2 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X2</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X3 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X3</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X4 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X4</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X5 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X5</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X6 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X6</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X7 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X7</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X8 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X8</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X9 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X9</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X10 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X10</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X11</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X11 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X11</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X12 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X12</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X13</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X13 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X13</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X14 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X14</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X15 (base_boletins_tcc.csv)]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X15</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X16</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X16]</local-name>
            <parent-name>[base_boletins_tcc.csv]</parent-name>
            <remote-alias>X16</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[F5]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F6]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F7]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F9]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[RC1]' role='measure' type='quantitative' />
      <column datatype='real' name='[RC2]' role='measure' type='quantitative' />
      <column datatype='real' name='[RC3]' role='measure' type='quantitative' />
      <column datatype='real' name='[RC4]' role='measure' type='quantitative' />
      <column caption='X1 (base boletins tcc.csv)' datatype='integer' name='[X1 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X10 (base boletins tcc.csv)' datatype='integer' name='[X10 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X11 (base boletins tcc.csv)' datatype='integer' name='[X11 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X12 (base boletins tcc.csv)' datatype='integer' name='[X12 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X13 (base boletins tcc.csv)' datatype='real' name='[X13 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X14 (base boletins tcc.csv)' datatype='integer' name='[X14 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X15 (base boletins tcc.csv)' datatype='integer' name='[X15 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X2 (base boletins tcc.csv)' datatype='integer' name='[X2 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X3 (base boletins tcc.csv)' datatype='real' name='[X3 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X4 (base boletins tcc.csv)' datatype='real' name='[X4 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X5 (base boletins tcc.csv)' datatype='integer' name='[X5 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X6 (base boletins tcc.csv)' datatype='integer' name='[X6 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X7 (base boletins tcc.csv)' datatype='integer' name='[X7 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X8 (base boletins tcc.csv)' datatype='integer' name='[X8 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column caption='X9 (base boletins tcc.csv)' datatype='integer' name='[X9 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Cod' datatype='integer' name='[cod]' role='dimension' type='ordinal' />
      <column caption='Delegacia (Base Boletins Tcc.Csv)' datatype='string' name='[delegacia (base_boletins_tcc.csv)]' role='dimension' type='nominal' />
      <column caption='Delegacia (Result Cluster.Csv)' datatype='string' name='[delegacia (result_cluster.csv)]' role='dimension' type='nominal' />
      <column caption='Delegacia' datatype='string' name='[delegacia]' role='dimension' type='nominal' />
      <column caption='Delegacia Id (Base Boletins Tcc.Csv)' datatype='integer' name='[delegacia_id (base_boletins_tcc.csv)]' role='dimension' type='ordinal' />
      <column caption='Delegacia Id' datatype='integer' name='[delegacia_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Grupos.Ward' datatype='integer' name='[grupos.ward]' role='dimension' type='ordinal' />
      <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[grupos.ward]' derivation='None' name='[none:grupos.ward:ok]' pivot='key' type='ordinal' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RC1]' derivation='Sum' name='[sum:RC1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RC2]' derivation='Sum' name='[sum:RC2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RC3]' derivation='Sum' name='[sum:RC3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RC4]' derivation='Sum' name='[sum:RC4:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Delegacia,Grupos.Ward)' hidden='true' name='[Action (Delegacia,Grupos.Ward)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[delegacia]' />
          <groupfilter function='level-members' level='[grupos.ward]' />
        </groupfilter>
      </group>
      <group caption='Action (Grupos.Ward)' hidden='true' name='[Action (Grupos.Ward)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[grupos.ward]' />
        </groupfilter>
      </group>
      <group caption='Action (grupos.ward (result cluster Sem acp.csv))' hidden='true' name='[Action (grupos.ward (result cluster Sem acp.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[grupos.ward (result_cluster_Sem_acp.csv)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.209091' measure-ordering='alphabetic' measure-percentage='0.790909' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:RC1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC1:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:RC5:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC5:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:RC3:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC3:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:Longitude:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:RC2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:Latitude:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[avg:RC4:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC4:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:grupos.ward:ok]' palette=':filled' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>5</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>1</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>3</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>2</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:grupos.ward:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource inline='true' name='OpenStreetMap WMS' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' description='http://ows.terrestris.de/osm/service?' full-url='http://ows.terrestris.de/osm/service?' inline='true' offline='' port='80' server='ows.terrestris.de' service='http' tileset='US\normal' url='/osm/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Grupo Com ACP' type='sheet' worksheet='menu' />
      <command command='tsc:brush'>
        <param name='exclude' value='menu' />
        <param name='special-fields' value='all' />
        <param name='target' value='Grupo Com ACP' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BoxPlots'>
      <table>
        <view>
          <datasources>
            <datasource caption='LocDPS' name='federated.07z0t971dztbyx191md251dtq31w' />
          </datasources>
          <datasource-dependencies datasource='federated.07z0t971dztbyx191md251dtq31w'>
            <column caption='X1 (base boletins tcc.csv)' datatype='integer' name='[X1 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X10 (base boletins tcc.csv)' datatype='integer' name='[X10 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X11 (base boletins tcc.csv)' datatype='integer' name='[X11 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X12 (base boletins tcc.csv)' datatype='integer' name='[X12 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X13 (base boletins tcc.csv)' datatype='real' name='[X13 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X14 (base boletins tcc.csv)' datatype='integer' name='[X14 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X15 (base boletins tcc.csv)' datatype='integer' name='[X15 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X16]' role='measure' type='quantitative' />
            <column caption='X2 (base boletins tcc.csv)' datatype='integer' name='[X2 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X3 (base boletins tcc.csv)' datatype='real' name='[X3 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X4 (base boletins tcc.csv)' datatype='real' name='[X4 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X5 (base boletins tcc.csv)' datatype='integer' name='[X5 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X6 (base boletins tcc.csv)' datatype='integer' name='[X6 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X7 (base boletins tcc.csv)' datatype='integer' name='[X7 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X8 (base boletins tcc.csv)' datatype='integer' name='[X8 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X9 (base boletins tcc.csv)' datatype='integer' name='[X9 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column-instance column='[X1 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X1 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X10 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X10 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X11 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X11 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X12 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X12 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X13 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X13 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X14 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X14 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X15 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X15 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X16]' derivation='Sum' name='[sum:X16:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X2 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X2 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X3 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X3 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X4 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X4 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X5 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X5 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X6 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X6 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X7 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X7 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X8 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X8 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X9 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X9 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X1 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X2 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X3 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X4 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X5 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X6 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X7 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X8 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X9 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X10 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X11 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X12 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X13 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X14 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X15 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X16:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X1 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X2 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X3 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X4 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X5 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X6 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X7 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X8 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X9 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X10 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X11 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X12 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X13 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X14 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X15 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X16:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</rows>
        <cols>[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{61713AC6-2995-475D-A45C-40E039F495AF}' />
    </worksheet>
    <worksheet name='Cluster VS RC'>
      <table>
        <view>
          <datasources>
            <datasource caption='LocDPS' name='federated.07z0t971dztbyx191md251dtq31w' />
          </datasources>
          <datasource-dependencies datasource='federated.07z0t971dztbyx191md251dtq31w'>
            <column datatype='real' name='[RC1]' role='measure' type='quantitative' />
            <column datatype='real' name='[RC2]' role='measure' type='quantitative' />
            <column datatype='real' name='[RC3]' role='measure' type='quantitative' />
            <column datatype='real' name='[RC4]' role='measure' type='quantitative' />
            <column datatype='real' name='[TC1]' role='measure' type='quantitative' />
            <column datatype='real' name='[TC2]' role='measure' type='quantitative' />
            <column datatype='real' name='[TC3]' role='measure' type='quantitative' />
            <column datatype='real' name='[TC4]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Grupos.Ward' datatype='integer' name='[grupos.ward]' role='dimension' type='ordinal' />
            <column-instance column='[grupos.ward]' derivation='None' name='[none:grupos.ward:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RC1]' derivation='Sum' name='[sum:RC1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RC2]' derivation='Sum' name='[sum:RC2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RC3]' derivation='Sum' name='[sum:RC3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RC4]' derivation='Sum' name='[sum:RC4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TC1]' derivation='Sum' name='[sum:TC1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TC2]' derivation='Sum' name='[sum:TC2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TC3]' derivation='Sum' name='[sum:TC3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TC4]' derivation='Sum' name='[sum:TC4:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC4:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:TC1:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:TC2:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:TC3:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:TC4:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC1:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC2:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC3:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:RC4:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' field-type='quantitative' max='4.0' min='-4.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' />
            </encodings>
            <reference-line axis-column='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</rows>
        <cols>([federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok] * [federated.07z0t971dztbyx191md251dtq31w].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{7EF6D8FA-E87E-4D2B-ADE4-7C4A22D58F05}' />
    </worksheet>
    <worksheet name='Mapa'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; com ACP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LocDPS' name='federated.07z0t971dztbyx191md251dtq31w' />
          </datasources>
          <mapsources>
            <mapsource name='OpenStreetMap WMS' />
          </mapsources>
          <datasource-dependencies datasource='federated.07z0t971dztbyx191md251dtq31w'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Delegacia' datatype='string' name='[delegacia]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Grupos.Ward' datatype='integer' name='[grupos.ward]' role='dimension' type='ordinal' />
            <column-instance column='[delegacia]' derivation='None' name='[none:delegacia:nk]' pivot='key' type='nominal' />
            <column-instance column='[grupos.ward]' derivation='None' name='[none:grupos.ward:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07z0t971dztbyx191md251dtq31w].[avg:Longitude:qk]' field-type='quantitative' max='-5160228.6747928001' min='-5214435.9833229426' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07z0t971dztbyx191md251dtq31w].[avg:Latitude:qk]' field-type='quantitative' max='-2677674.2651164755' min='-2735407.2553498708' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.07z0t971dztbyx191md251dtq31w].[avg:Longitude:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.07z0t971dztbyx191md251dtq31w].[avg:Latitude:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
            <format attr='enabled' id='OSM-Overlay-WMS' value='false' />
            <format attr='enabled' id='TOPO-WMS' value='false' />
            <format attr='enabled' id='TOPO-OSM-WMS' value='false' />
            <format attr='enabled' id='SRTM30-Hillshade' value='false' />
            <format attr='enabled' id='SRTM30-Colored' value='false' />
            <format attr='enabled' id='SRTM30-Colored-Hillshade' value='false' />
            <format attr='enabled' id='SRTM30-Contour' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.68999999761581421' />
            <format attr='wrap' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' />
              <shape column='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' />
              <lod column='[federated.07z0t971dztbyx191md251dtq31w].[none:delegacia:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07z0t971dztbyx191md251dtq31w].[avg:Latitude:qk]</rows>
        <cols>[federated.07z0t971dztbyx191md251dtq31w].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{B4E5454A-F015-4728-AC29-26AFD774EBE3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='LocDPS' name='federated.07z0t971dztbyx191md251dtq31w' />
          </datasources>
          <datasource-dependencies datasource='federated.07z0t971dztbyx191md251dtq31w'>
            <column caption='X1 (base boletins tcc.csv)' datatype='integer' name='[X1 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X10 (base boletins tcc.csv)' datatype='integer' name='[X10 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X11 (base boletins tcc.csv)' datatype='integer' name='[X11 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X12 (base boletins tcc.csv)' datatype='integer' name='[X12 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X13 (base boletins tcc.csv)' datatype='real' name='[X13 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X14 (base boletins tcc.csv)' datatype='integer' name='[X14 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X15 (base boletins tcc.csv)' datatype='integer' name='[X15 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X16]' role='measure' type='quantitative' />
            <column caption='X2 (base boletins tcc.csv)' datatype='integer' name='[X2 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X3 (base boletins tcc.csv)' datatype='real' name='[X3 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X4 (base boletins tcc.csv)' datatype='real' name='[X4 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column caption='X5 (base boletins tcc.csv)' datatype='integer' name='[X5 (base_boletins_tcc.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Grupos.Ward' datatype='integer' name='[grupos.ward]' role='dimension' type='ordinal' />
            <column-instance column='[grupos.ward]' derivation='None' name='[none:grupos.ward:ok]' pivot='key' type='ordinal' />
            <column-instance column='[X1 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X1 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X10 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X10 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X11 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X11 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X12 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X12 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X13 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X13 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X14 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X14 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X15 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X15 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X16]' derivation='Sum' name='[sum:X16:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X2 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X2 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X3 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X3 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X4 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X4 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X5 (base_boletins_tcc.csv)]' derivation='Sum' name='[sum:X5 (base_boletins_tcc.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X1 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X2 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X3 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X4 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X5 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X10 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X11 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X12 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X13 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X14 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X15 (base_boletins_tcc.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X16:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X4 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X13 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X10 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X3 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X12 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X2 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X1 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X14 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X16:qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X15 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X5 (base_boletins_tcc.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X11 (base_boletins_tcc.csv):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]'>
            <groupfilter function='level-members' level='[none:grupos.ward:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</column>
            <column>[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]' />
              <text column='[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</rows>
        <cols>[federated.07z0t971dztbyx191md251dtq31w].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{84B57090-5DE9-47F4-997B-AAA0D74D9B9D}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF4C628B-CE27-4243-9CFB-C544449DFE51}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{ED850A94-F36B-475E-A0D0-89528B19C41B}' />
    </worksheet>
    <worksheet name='menu'>
      <table>
        <view>
          <datasources>
            <datasource caption='LocDPS' name='federated.07z0t971dztbyx191md251dtq31w' />
          </datasources>
          <datasource-dependencies datasource='federated.07z0t971dztbyx191md251dtq31w'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Grupos.Ward' datatype='integer' name='[grupos.ward]' role='dimension' type='ordinal' />
            <column-instance column='[grupos.ward]' derivation='None' name='[none:grupos.ward:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='86' />
            <format attr='text-format' field='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' value='*' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' value='*Grupo 0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' />
              <shape column='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' />
              <text column='[federated.07z0t971dztbyx191md251dtq31w].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]</cols>
      </table>
      <simple-id uuid='{95F831E0-18F2-4890-BF64-B9A11FBA82B2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Descritiva Variáveis'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='3' name='BoxPlots' w='98458' x='771' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='6' param='vert' type='layout-flow' w='98458' x='771' y='1351'>
                <zone fixed-size='280' h='97298' id='3' is-fixed='true' name='BoxPlots' w='98458' x='771' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{15FB221F-1DB4-4178-AD30-424DA9A4E778}' />
    </dashboard>
    <dashboard name='Grupo Com ACP'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='15' param='horz' type='layout-flow' w='98458' x='771' y='1351'>
            <zone h='97298' id='7' param='horz' type='layout-flow' w='98458' x='771' y='1351'>
              <zone h='97298' id='5' type='layout-basic' w='98458' x='771' y='1351'>
                <zone h='97298' id='3' name='Mapa' w='34153' x='771' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='51180' id='10' name='Cluster VS RC' w='64305' x='34924' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='46118' id='6' is-fixed='true' param='vert' type='layout-flow' w='64305' x='34924' y='52531'>
                  <zone h='46118' id='11' name='menu' show-title='false' w='64305' x='34924' y='52531'>
                    <layout-cache cell-count-h='1' non-cell-size-h='100' type-h='cell' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='17' param='vert' type='layout-flow' w='98458' x='771' y='1351'>
                <zone fixed-size='280' h='97298' id='3' is-fixed='true' name='Mapa' w='34153' x='771' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51180' id='10' is-fixed='true' name='Cluster VS RC' w='64305' x='34924' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46118' id='11' is-fixed='true' name='menu' show-title='false' w='64305' x='34924' y='52531'>
                  <layout-cache cell-count-h='1' non-cell-size-h='100' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6AC9C285-F1E3-42BA-A3B6-AC55F0A374EF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Grupo Com ACP'>
      <viewpoints>
        <viewpoint name='Cluster VS RC'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mapa'>
          <zoom type='entire-view' />
          <highlight field='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='menu'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{F7ED4CD7-9CFF-4547-A383-B8B25CD9502F}' />
    </window>
    <window class='dashboard' name='Descritiva Variáveis'>
      <viewpoints>
        <viewpoint name='BoxPlots'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{BB002337-210A-4072-90A7-2100E2CF8D9F}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E18EBE56-32F5-4E75-992D-5F5DFFA0570E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.07z0t971dztbyx191md251dtq31w].[sum:X11 (base_boletins_tcc.csv):qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EF54996-444C-4F8E-8F62-598005749BCF}' />
    </window>
    <window class='worksheet' name='BoxPlots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</field>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F27AC33-B9B1-4DEE-A262-03BFDC1FBA0A}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C9B6BAD4-74B6-448B-91FA-A1D4DBD91CEB}' />
    </window>
    <window class='worksheet' hidden='true' name='Cluster VS RC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[:Measure Names]</field>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15CA4328-B404-4F52-AC6A-DCC6E44FD3F3}' />
    </window>
    <window class='worksheet' hidden='true' name='Mapa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.07z0t971dztbyx191md251dtq31w].[avg:Longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.07z0t971dztbyx191md251dtq31w].[avg:Latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.07z0t971dztbyx191md251dtq31w].[avg:Latitude:qk]</field>
                  <field>[federated.07z0t971dztbyx191md251dtq31w].[avg:Longitude:qk]</field>
                  <field>[federated.07z0t971dztbyx191md251dtq31w].[none:delegacia:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>-22.904419099999998</value>
                <value>-47.072014199999998</value>
                <value>&quot;Delegacia do Idoso - 2ª Seccional - Sul&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[none:delegacia:nk]</field>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10F8BE72-5DD4-4856-88DC-44A7A850307F}' />
    </window>
    <window class='worksheet' hidden='true' name='menu'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07z0t971dztbyx191md251dtq31w].[none:grupos.ward:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D91B18A0-009F-4CC8-BC29-A69D5BAF7926}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BoxPlots' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Descritiva Variáveis' width='192'>
      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
      7Jy0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Grupo Com ACP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Waxm13Xn91t7OOd8w51rJIvzIMq0bEpuWVKr1bJlt92JO0MjMNAIggRI
      gCQPQXceg0byECRAHpMAAZJ+yFscOOl0Jx7kQRJJSZZkiRJFyaQoUpyrWKy6VXe+33TO2Xuv
      POxzvxruJVkki6Ro1V+Aqnjru+fsc7699l7Df/23qKpyC7fwCwrzYQ/gFm7hw8QtA7iFX2jc
      MoBb+IXGLQO4hV9o3DKAW/iFxi0DuIVfaNwygFv4hcYhA3j12e/x7adezP+hkb/4f/4VG9Pm
      Ax1Uaib82R//CZOYSxTNZIdvff1xHn/862xPAo/++f/Lo48+yjf/+ofEW1WMN8V0b4NvPP4Y
      j3/jO+zPJjz+2Dfe5jeUra2tG7iy8vRTT9F27/75Z37MpJ7xxLe/yaOPPcpPXz7ffSzy9b/8
      0/xdfef7NFFJoeYH3/krHnvscV6/tPteHu+m4JABbF9e5+yrr9AqjC6+yLmL++w3gf2tdb7/
      xBNc2NwjxcCF11/lh08+yc64RlPkpeef4ckf/4Q2pvm1djfe4PtP/ohJnX//B08+xbgOtNM9
      Lpx/nSd/+GN2tjf4wQ9+yKSJ89+7fPZZAvDTl9YB5fFHH+OhX/scf/8Ln2ehtGyOAl/60pc4
      bS7xo9c+/Jf4cwmNPProN/nk577AFz7/afqFYTarifWIzb0pABfXL5Jiw9NP/YDnXznPzqWz
      /MEf/J888cMfU4fEG6/+jGeef4WkysbGZcY7lzl7YQMQ7HSd58/vQar56Uvn2XnlKcLSvfzm
      b/wGd55a7cagXN5t+dKXvsSd/RlPvXCRH337cYZ3Psxv/Mbf5+TK4MN7Px2OcIGEu08v8OqF
      XX728gU+/sAZAKZN5GMPfZxvP/41mmbCV7/xbe65506++md/QRsaqqXj3LUmPPrNpwGI+2/w
      5996lgfvvZPJ3jpf/cYPue/u2/nKn3+F7fWX+NaPX+V0f8r/9ZUfcO8dfR7/+t9091eefu4C
      v/lbX+Dsz54GpozrgrWFCus8zsr8c5u7E5YGxfv+kj6KSPWY2i+wWHmc81iT31u79Ro/fGkd
      gG/81Tf4yTe/Qly9m8XS0l85zh1nzvDwQw+w9fKPePZiw7C9wF8/c47vPP5lnnjmFY6vLQNw
      78Of4NXnfsLO+ZdYOXM/J+78OBsvPMFXH/sWyfj5OPY2Xudb3/or/ubVDe48vcLZjQn33r6K
      MRbv3Qf/Yq7DkTHAnfc/yLmXn2NnJqz08iCf/fH3eeL73+eNNzZogFO3n2Fl9TjHKsPljXWe
      +N4T/Pj5l9jd2gZg78JLnHn477C0skoZ91m7/QFW1k6w5pVJhDvvupvV5SVO3XaG1ZPHMXV2
      s2Iz5uXXXuOJ7z7JG6+8wF5bINKSrnJ1ti68ymOPfZ0TD3+B+4733tcX9FGFOA+hfdvPfezX
      P8/mc0/yvSd/SIunLEsG/T5vXLzAzuXXeWl9l2ZvBztY5Yuf/zS9Is+HavEUMtnkpy+e46GP
      3YPrL/Nv/bv/mC9+5pf50z/5Mw6+roW105xeMLB0B6eXKvpemLXpzQf0AeOQCYox2GqV8Maz
      LH/ydzHrLyLAeDymv7ZC6T0CnH3hJ3ytmRKXTtGLM5o2UZQ9nLUArNz7KTb+vz/n0bOr/NKv
      PML4jcf46ldfJg6PseiEy0ZABCN5ZTLdCnXppb/hk7/zT/j0A8f42O1DnnvhIr/28F386Z/+
      GcNewa989oscO3MfX/qtLyHXD/4W5hDX41fvWeGP/uwvGFR9Pv3ZT2GM4IdrXHj2m3x97zX2
      G8PlS+vgHGFnlyYaXBzz2F99l0/c90uce/IniPS5445TvDg6d+37FssDt1V87bkpn/1Nz+76
      Wb73o+dwVjh2+vb5x5zz3P/I52m+9yhf+e4zfPYzj/DVL/8Jy4tD7v34J7nnttUP/N1cDXk3
      ZLh2usfj33uK3/mNL74fY7qFW/jA8K4MIMXA9u4+a6sr78eYbuEWPjC8KwO4hVv424JbhbBb
      +IXGNUGwqhJC+LDGcgvvEcYYbJeEuIUbwzUGkFKiaaY4c/glxhhRtoBljLGktAU6xLnqbW/S
      hpY2CFXlaJpACInxtGFpoY9zlhAj49GUfr+HoozHMwb9ktmsoaoKJtOatZUhISaMMaSkxJjY
      2x+zuDDAGGE8mZIS9HsFijAeTVlYqHBGUVVEBOscIkK78Rqu2UePP4hxR9cRFK7JeigQY6Bp
      IzFBVRhQRYzgrD/yGu8UIYyAiHWLAMg7yXMJNI0yGAxvylh+UXBNDBBjpK2nOHe4QJF3hxEw
      JntOirXHEGPe8otKKRFjoG5avDN4X6CAvcrIYkpoiihgRDDWkVIkxgAK1lqsfWdFkxDaPEbn
      89jbBlAMAuvPgrGY2z6BiDly9HpgAqrEFEgxoqqdAaZutXVv+/w3ivy8l0GWiBKJKWDFUdoB
      Ijd2/SZE+v0Pv7r6UcINzyoRwfkhofU4t0GMhhgvI2kR6/pvOoliCqgmQmhIyXaT2c9XZYAY
      c8HGiBBjREQwYoiaMMZijtiR3g7GGEQEQRARfFGSYiSMt6kITEwfs3sRv3AcuW4FV0207bX8
      p4ShLD15X1CuLBs3pxoR4wRVQ6AlaQsIQRucFljxN8XIbuEw3tmyqoCOaNshzi0QwgzYR7UC
      EVAOrVYpRpwv6PeE3b0RZVkgJl2zA6C5EOZckVdehbadAYK1/oZXwKtxvdEIkneRakC75+m3
      O2i7QxxdpBmewi+dRkRQVdqQJ3/2pwUxhlmbiEk5YGLk3QrQRCRhsDc0TkXfZDJHRAp6foE2
      1TRxCiizOMIki2AwYjDicKa4ZRA3CYcMoB1tYZdPHPl6Q5iCaXFmFWMM3vcIYZQNQQMiUxAD
      6rBuiZQiItndMV5wztK0MX+RV7kO2XaEpq0xkgM5TYovy3c1+d8Kpuijp36JZrIDxiI75/G7
      54hFH1MtzJMA1vlrjLTnZU7HEBFMZ6hNakjaYsXhbfW2EzNGvYrPdAUiFtXs8pnOxTxA0ghE
      gl4xHm/K9/YibgE4Ig1q2nFePUXQq/6XUgR2QZcx1oEYxBhUBxjZBmbAEmgPkSkpNmhKtMl0
      7o5h0K+IIRBTJMU80ULM/42mbvI7kLzqarr5nBEBjCvxiyfxw2Nw7D4AYjOlDQ1ihKIoMXLt
      qxERrJG5QR64VoUtqdwQazxtqnm7ooqz115XUdpQozoDIGjDLI7giCsdTP46TjqjuIX3ikM7
      gPoBr7x6kcXFAc5ZnLPUdUuv5wlhGbBsbG9TlR4rgoqj1zuF94J0k6ZtImLGJO0j4ghJ8Vay
      KySW8WSC6eVJnlLEOY+zPhtajITQ5lXWGEJo3nUc8HZQlDTexAJqSwyCMdnPP3rjOQiN5eof
      kVIkpQQYVPQgTCCliDFv7RqFdgTsEVMP7xeJtFfd583GnZjFET27eNN3yHeK0WjEcPjzl3m6
      0XEdMoCkYJ1lNJ7mFc8YBv0e65e2GfT7QCIlJYREMgIIdR0oBle2ZOMGCBskhX7hmbYRa7QL
      SpVeVTKdNfQEjNi54QDEFDHW4pwnhpAzLu8wA/RmUJSQmhxUitBuv0ExXqd2fSj6WOsw180n
      1TyhBUG1S49KvpamHCzPdwURmmba7R6CkpAYcM4fmS3KCbgJbeqTjJLSmNL2qdwibayJenQj
      kiAkDdRpQmn7H2o80LZvzzj9MHCj4zo0s9xwmVXZpyc1TbKYwQrOw2BwjBCy/65SIUZJUdEk
      VGW+jKqSyP5s25SImQE9SmeYtRFVEE15N7CWpk2UhcN2BpBiBNW8anJlUt2MVU5R2lRThzE9
      t4DWDW7/PKlagsUzWCM57SqCwVxzT00KpssBpEibckpUNRundwfZIbApzd0TawtiCLRtg/PF
      tYE/EGONknCuT9CapC3TsIc3VZcJeisIIdXYvyVB8eb661zejzx0/10f6H0PGYARQ9mraHc2
      qWZbzOIeYXEJ74+RCN2WDk2YIWoofMm8bCQ5qEgKIj2s3aJte4gY+oVHFWKSPCGcMKsD6izi
      bK4XpJBdn27FF2OI7U2sTCdwqaSpWxhv4V1Bs3g7RdkHgRhCrh+o4nyBdq7NQf4fEbSrARjr
      8kp/nXEaY7ogtnvBB6v/UUYsBtHs0yNXnJ42TQ8+8LaP1MQJVhwiFj7CtK61k7exNzn3gd/3
      SC6QKwf4E/fT2hKvNcYsIWKwzuUVrWmweJwtSCkR2oaUEl3WHSuC9wUxeGBE7Px6Jac7vXN5
      AtkSJAe9SVNX9HLZhdYcD1zJFh18uUJ7XSNw3SbakEiaOu+ZXBkNOv9ZSpEUFRGHcwWDwZCE
      yVmrLjVpncP7MscebZN3BMD7AsiT3zmPc3k1zy7d28Maeyiozj/3QIHV641cuNH6Qo4HxvkZ
      3zYE//nFZLTPzs4Os+aDpeIcDoJTBLpJ6HvodIw95nNKk1xQOvhqYoqkEDtKQPYRkubP5aC1
      D4wx1l5T+AIQDJcvb3Ls2DK7+xPKsqRtIs5B00wZDkvG44Z+v2Rnb5+11QViTGxt72djtJZ+
      r6DXc1y8uImIYXl5QNME+v2S6aylnjUYK6yuLLCzM6E3KOkXNap96npGEabEyTbIWh4/gGo2
      ZsmTUIyZB+FvnsN/d8iB/gKOTUIyyPUByI1dhaSBadhD9KObGo1ty7Fjq8T3IfP3VjhkAGHj
      ZeyJ+8EYbM+hdV5VDqgFCvOtVskLqDGWVmdIdCARK54UEjEqRZED2aRKaGusywFoEyLOWUAp
      vGc8mjIeTxkO+5SlZ3Nzj1On1tjc2sN7x3ja0NQtg0Gf3d0RMSZms5rbeiuogjGwtzeh6pVc
      XN/mzjtOsNkGyrJge3tE2wZ6PYjRAQHKBRIGP9kkDdayEYtB5XrqhXTP+uar68G/3ahxKDl+
      EDEY40jp4J0e8ftXNr63RNKYaxMd2rb9QALUuq6ZTCbv+Tq27LNW9iEFJpP3vgvc6LgOGYDX
      hnq0hV84RmqYZ2h8UXZfhnJAHwra0qQJEgyOIvvJmj+vmvBFiWofZZcWj08VqUkohhiV48cW
      KQolJUXV0estUBQea4VeNWQ02md5Ke8E3ii2Z5lMZiwtDanrmrLsE5qG48cX8C4xneXA/PTJ
      AaP9PRYWSqyxFN4wqwNlUYC2JFV82ScMjlNMN6lTIBqo3FvwbrTLkB3lNL7Vvx31cVWmcZ/S
      9EFzveVQ+ukAKbuVat/ZymhMLja+37iZ9/nxj3/Mr/7qr96Ua93ouA73BIvBhDEpLYPvYaY7
      hGaCLwddwJdz5KqJ1CYsBUayj3sQLOat3dKGFpE+1kzRRgmmQZJnNpuxuLQM6TIpOVBYHNbE
      uIR1DtWEGmFgEjBmYRCBgCj0e5a9meBtIjFif2JYGEzQ1KNXDTDWQgoYo7SMSRiClgwWQEOL
      dQ4n2X9vq1Wk3kEnO7CwRJtqOPCmVbGmwJuiey/CEQXct/23qxE791AAL2VHc8gx01FLvKI4
      PEEarnYebwR5F3v/qdHT6ZSqentG8I1AVW/atW50XIfrAMZhmgliBO1Z3AimOxdwJ+6fJzzy
      FEl4lzM7xua0ZYht9vW7jInpqsWhHdIr9qnbISEoy8vLNE2LkUW8L0Fy0cj5fJ2EYMSCLaCj
      HBzsPCIjTiyNaVqDNQ78jBgLynKpy9Urah1JIiSAROEjoQ14U3VBdl51bVnQqEHaCYW7jTqO
      CNpixOKlzIZ4k/z+nIadgUJhK2KX5lQigmYX6LrdR1QQ8ju0kr+qXBv4aKc8f55wOA2qkdgv
      Ed0i0WPiVqiabZrddcrlUyjKNOyjmg7RdZ31xNgSQ8AUlhgDRi0iDmuhHSUWFgYYEaryWh6+
      NVeGItf8Kd1fBEQZjSt63qOmZFxHlgdLOYMIXN3debCa53AbjKnAwqTdo+cWiNpS6wTxAwaz
      TZrN1yiWb8PZEidFziLVM1QSchOq0EkjhakQEaZhhHa1giRCUEchDU0qECMYcSQNiGZqSOn6
      HTM7MbkBqZOfdzz55JN47zHGsLCwQF3XPPjggx/KWA4ZwHZ5hl5Z0k6gqkr2rVAu9ih3z1LH
      GjNcw1jB2IqUAk2azb9YkSuMzoNVUzVhraOpBTEee4RfllRz4u+qiupRSAreJpxzOJcbY3ZG
      geWBu4Y6IwilHTCLo+zORCXZiBVHSIE6jrHiMeIolk/Tbk4pZpvENzZI1Sqtr3CLJ25qXt2I
      ZRb28aZHZQdMwt78WaNYSFCamsgCVjxtZyBXFwI/ymnOq3H2tdeoqgpjLcePH2c8Hv/8GIAx
      nskk0LaB/dGMfq+A4Qnaekw5voiOLoAbEBbWoDfEmuKQm3B1FVdViSlh7JBeVeavMAcRdKTi
      bufXazItctX/z8cGeJuLdYIwqCwhKXVQ+oW57rM2p3KTYG2Ri0vdR9rUEqTBYMF75MTHmEy2
      sTvnqOotmCXq0SX0+IO5+ntdCvdqRA3Z7SLRphnOlHgp589+8AgH9YhZ3MebsnPDUve2BDUl
      qKLa0tBixc8D46SRNs3m1/jgqr4tP/3xT+ifOMOdJ5f52U+f5cSdD1DvbrBy+g7KvwXdl4cM
      YDCoMMYwmzU5I2MEseCO30c7PY5Od7GTDfo752h3PWl4Elk6daRb6osKUPZHNdOZsrQo7I/y
      dUWgbtqu0JWrvm3TUlWeEJVBz1+zAiswnrVYURQzn5QLlWV3EjoDuMoIRajcAm1T08YpBkub
      ZhgBTeScu5J3hxhIhSOevJvUCDq+xKDepW5GSNm75tlUE6Hzw0UMTZwQu0KWIDRxinfFfCx1
      nBBTQ2H7GAoSU9pU5wmOndMmem6BGARJU1QdKSW85FVSUaK2JE0fMOWhplo8w2T7Iq/sX+LU
      PQ9RmobRaJ9x5F0ZwKwJPHd2k4VBjzokxj/bYHVY8vf+3oezux0yACuKtbAwKK5KQQuI4PvL
      0F8mrdzOZPcNzHiTcu91GhS/cubIPEaMDXXdMOgXxKhsbe/T6xXUswbnHMZZSInBsMfm5i7D
      YZ+UEoPe8jVXEsBbzcHxVUkTI5L7c6+DIGhMOVtlIlY9Nnrm7Zyav702zLqgndzQ4wtk6XbY
      GBPrXczCKhaXdzJtMxWZeM19rp2USiJiOz6RE0+gzo02Opn/TtCGwvQoTC+nkkWAgDUVJIsR
      m4NwPagxWLqo/jAUnClAb/6S/NpzT+FP3M6JBUO/dFhxLC32eLeZ+qaNbO9PEeOYTKdc2hkT
      jp+4qWN+JziSZjl3Ya77uaJzlmIcLhAHA+TyOczoErp48ojWQkV1h15vQIzgnLK02Kffr2AJ
      mqalKIu5/7+yskjVK2ibcN3qr2hSmjbSKz3uqjhCROgXR/Qwdw5VJCBCLtSJoF1MnTMsgjUO
      7ytmMeVVloQfbxNTJPQXiGGf0g7mbsjV7+doKLMwngf1MbXdAnLt7wlCm2YEaSjNoOu3aDGm
      j7E5VmrbmhgjybZvwf8XJOVOMb3pu4PnE7/+OUKzy+LikGd+/CNOnznD+bMX8CPD6oPvnLi2
      OCj53MNnDsUAHxat+x3zjNs063xXQISmv8xwf51m/zLF8m3zzymZMj2bFXgnFJXBCHhrEMkU
      4cJlVygpGFFWlnLetlcUXbU0uyeqkFKgcOZQRVbRnHUy5hrKsZBdHIcHNV1uP3Vtm4akgSQR
      nypiatGoODoC3HiDJBYpMrWgidMrz/y2yL59TGH+O97ke8xJg93I824k1HGMpkRpEsZ4xOT4
      xTlPCM08xrjmubvXEJMSdIZEyZmum4qStbUSyLz6T37qUwCcOvHhrdg3G4cMIIbmSFWIA1jj
      COkqnvpggWa8g4wuEfsr2KJHUmXaRJq6ZlBNEalwvtsdMnWIts0dY1mqxJA0T2YjhqQpy7B0
      zMs6KM56rKQuULwSMB+oR8QIzpdzGXDIEwg6bg+GpisoqemyTklwviTFgBFLjFPs5uuUREa9
      K7KPNz75r+AKPcLgTUmTZvOqrzc9VMmrfKxzIQ0Fiq7yrh1x0AIGo7arvMQr1xUhRMUaQ4qZ
      wv1uxvlhYGFxkaLIzIGqqq5JX3/QOFwI272Alvdc06RyAEEoTO8aA1ARpsM1FvYuEi/9DDn1
      EOIKnBGi7VomzQ6hLXBuBWszo5QurojhirujKNZm4p2xFufzhBCrGBFSDFmbp5nNMyyZkkwm
      scWQV9CrXIGUEoEGb6oDnjYulUQaLMXcz06podg8h08to/4qLK29pxebK+MJJTIN+1RumIuG
      IjipCElJOkUEJCnWNBhzjKiKdIG2M3mSpI6n5DhgzgZK2yeaQNAam3pECV2c8POP3/7t3/6w
      hzDHoVnu2hFh8uanrgimy6Hnl+1MgRssMFk8jks14dKLoFB6Q4gJ54fACtDShr15C+QBT8M5
      z0EPsHSMS+8LvCvm7YTOGIxkVQfvC6y3BFOTTEsyMbs2SNYX0oP+ZQixzU35WDRFHAU2FSQN
      eOmRNFLHEUkDZjahSC2j4TF0aXX+tO8eOUuUk72dS6RhvoIrYKXAqMPJlCYWuQ+azK8KXXNM
      y4wUI0kjQWsEwUtBTC3elFR2EWeLTjHiltLlO8URDTFCmu3C4M2Vnys3BIWobW7EMEpa7NMG
      xY8vEZsJ6npoFzgWtkdoFzFmQoqbaMrXnjeadCv/AeX4rb5IEYMmcDZXkg2WWmY4dVjjiSHT
      MazTubFlQ8iBdJQGBFqdZldIhJBaCoGoAoPFKzvIVXn8d4p0VWpUMDQpy5xoSpSuT+mla7bZ
      I2qF2q7CjlLYHqQWb3s5xSpCIX3UROo4wWAo7bCjkGjuNIsFqrcM4J3i0BsLKjDbPxRsHuBq
      sSlnDohwFmc89JZBYFK3tDHhnaGNM4LWgEF1ASgwdmeuroZcaaY/EMQ6CgdiVW1ocNZQmB5J
      OxcAg6igmogaScSOvp2vnYgY8SQJ8/FnDyznPn3TUo0vEcR2DTLzh71uDO/mFR/EEAf+uZA0
      5tgl7AAl3i9QmB7OZDUKJ36eai1sb14Nzp6+7VQoMqfJdQp1HwTz828jDr215HvYOEPDjZ0M
      2fFDc969m0ClSfQKi0Ho+cV5E3qecH1STIjMMNZ2agqZUPdmSN3kV01dVijvElZ8nkyasNbT
      pCktM1pyjBCYZU4NnjbOjpzBGhN+dJEmKfWxM9et+Nd+vmkdMcmbLg5H4UDfwZmKyuZsSp3G
      hDDBmIRzyzkVayq8KTFdzaFnF7uOsTkDEWcK+m4JI+5QKlbs4QzZLbw9DneEGT/PtByFJiac
      uXK00TUXK0pUBan3Sf0lrDFoFNqtV9HY5NUe0P4aftCCrhPCIvZNBKViF/QeNJ8bck9xDC3G
      l5ndKZ6aCSHWB2xtJBkSLUki0zACDhbzw5UN2d/GhobJYA3pjn86CrnpJgfjnpJEvJKblyvX
      u0K/y++vtH1cR40IKQfjzhRE3UB1Yb5yZ6U5k4lv3Q9SSh136qqGm6sZuZ2WknQ7nXlXHWW/
      2DjcD5ACKiZTkjsjaGNOO8aYstthPKW3efuQ3JMbU85rO+MJUmC6JhE0on/xX8LoItB9lV/6
      74n3/QPGs5qFoSOlo41NO4UIa4tcEEpZWWIWDZiIs4aUAt4UeReQIjfuqyNK0/Ftrr8mqArG
      KBoTg2bCTEoYLF0z+aWr5OZJni3LquBxSDJYLEIgmhYnxTx2MeK6dGdOW3op8+/rFTW3LPsY
      sZ2ydugYtL4o5smFpDEL+vorlPODd9LEGdM4RTWxXK6iAinm7+cW3hkO1wFi7oetN84x831M
      fxVTJKI2qGS/PUZL3bFyD6qy/dKiKaGpIbUTokKIiul82WvIAqps74zQlKgqg7VCm2qSRpwU
      WONyluSgLVGyG4RA4Qs8idFsQr8sUBIhNpjkiKbpyku2u+NBb+/8zqSUVS0MBuoGSS06vA1r
      XdcE4zrOfo821RRmiGrMu44zXc2iE+0VQ2n7ueiX6o6olnWORPJRUm1o87OLdHUJyCp6OXMT
      Y0CTZvUIueIGHihJtE2N88W84ShqZNTu423JoFhCFZqm6Uz9oxsH/NEf/RHD4ZDLly8DcO7c
      OT71qU+xvr7Oq6++ymc+85n35b6HXaDeMu0sMAzbmHaTabND01+AsgDrUBJiRyQy5TgloXSG
      FHNBytoitwamlrKwhLY59LUoyurKgKZtSKalvaquEKix6q8pdqGKJIuaRIwNzpSIiTRxSs8t
      INEizpBCQk0gSsDiiFwfxwi2ay2MITCcrNPYPnawTKst1uT+hmnYz9VZlML20QRYcDYX7UJo
      c6+DyZXcNs5w+LxLSUCBFBPWZSMx1tI2M5JkaXWkAS1pQ0OKAet8JxyQunfoMvFNTKe/lGi1
      mfctL/glDIJ0FXI0IeajrQz0yiuv8NBDDzGbZbrJgSFMJhPW19fft/seJsOVfbR3J9N2RiGK
      3z1HubdPUqiLPmHpOOILrFiceMRJ5x7lDEuwFW66TVy8DRHFO0t0PdRddZ6vZEPq90qaOLmG
      eXSg3nYNEtiOzpC6SVJ0jSsxRJREncY4KTCxADEob62dKbMJ0swwxx7A+gpRB13WPuftE2gF
      VjsVik4rVWNuWiErXcQYKF2fup7O5VPapsbanJ2xXWrXOk8ILc5nuZeUCkQSrpNh6Wp5JFVi
      28wD9lwN1s4d685R0EQyltjWkBK0E3SyCYNTMFx8l1PhKLQ889Qz9NZOcc9tK/z02ec5eec9
      bL3xGv212zlz8uYccaqqhJgIUTv6fHbn6k4ipWnjW1LS3wsON8UXmU4QnUfFEF0PmjGMN6na
      EXHjLLP+CmlxjWQjBpsV3chFrba3hK23ie0YfB+xHvk3/idiW2PCFOMsOjiBMdltuBGR10wU
      yIpr81aCpCSTQFNXBRWCNGDARJt98SNgJPccu2IR5FL3MzsXllLVHEso9HxJImUXSNtcg+h2
      Jm8rYtvOkwVFUYEqbWhxzuWDOZJmPaRORS5zkUYoS+Ro3RJS3i0EKA4OENHu91dypKgAACAA
      SURBVFK64jp1HKa8o3aaphowsx0sAVWh1psdA9QMlu9gNrrIyy/tcNfHHqbQhvKOuzl/4RLc
      JAM4u77LD392AbdyF3ffW/PC+S2ef+kiP7r4Ne4/5vjyd37G7/zDhsXBzZd9OTxLJPuf5oBk
      5gps2YfF48TZGN18meFki3q6z2zlNL5cAaXT8TfY/jJp18BsHymGGFFSOcROthmkMUEtqVjE
      yFK3Eyhtim/Nr5ScyvRaEjXgbYEkS6QmSuSaLAmQJGLUXss9Iwe2TjL9QRxI2YfdN0i9JYyx
      RA1M25Sr27Ymao3RXOOwxl+5njA3+jyptZOMzEWp+Yk0Eskfs52SnJBSRVKXNVA1UpRZjzQl
      pWlqnLXz+MKWJU3T0DYNsa2RdoKd7eDCBGJLNI5YLRGtgXoKvZu5+mcc0KFPLXTq2Em4tH6J
      e+65+6bd4+TqkLtOLXN8oWDQK7jr5BKTzUUe/NgdzEbbfPKBU/Srm3MM1fU4fD5AnJEwpJhw
      psxH9XSN5K4akk4/TLt/Cbf7Bn53nbjsMNXKXIHA+JJgK6TeQ+wdxPE2xe5r1KbPdOEMtr8M
      MibpZTTlieekJKT6zbc4EZIEUgJHhSSDasxKzF1XFVzVV57j3+vnP0qiiVMKeljnmBWrlHvn
      qLdfp1i9kxAUC5TeEpLr1OQSFDlmOEg75iYVOCi0xc6Pj6FFabB2AiSSCtYszmniIQowxFqh
      9J6mmUKKYCyaAkbojnKio0WATLfQyRZVnCIpEsQRF04QTEkxWEasp915g6K9zLSewGDhPU6J
      q1HwyOc+T2z2GSwO+dlPnubkqeNsbG0TTMHH7r3jptylKhwnVwasLXicNRxfHnB5ecinH3mY
      V155he2trUOy8jcLh7NA2mLUZwaiRrwrciWVrNhgjEWWTpN6S8SNl/D7FwnFImqzDy0IWgzw
      sy3qvctU03VmSUird1INhqBKjJ4Y9kF2SWmAUYdJDnVv4w4ZCKnG05tXcY+EHPwh89rXgesk
      wWGKrnq6fIqm3qMcrzM2JVIt4J0D1dxgIlmv/+C4JNMd3KEKYhyiiRQCCUUDhFBT+H1iXERM
      mVdylzNaogl70L3fjc/aHBdYR6dGZzAW4myEjTPKdpdUT2jV0A6O0XZjFBGcdVmLCMX0l0n7
      5zHpZjfMFywvF2SFP/iVRx4B4OSp22/yfT48HMEFckQCFsHaHuNZgysSpS0RyStfUkV8H4Yn
      0L3XiTHSxEC/a2OUaglTb1GNzhMwxNX7KcvcHgkHFIQ+1myTAoiRTHC7kUMfjNLoBJu6KulV
      gjxy9cQ3mjeHqxaOyg5oQkQ5oF4Y7NrdxAvPUIUxDYv5+VIOtg9OfzxgqKaUSEm4eHmHsixY
      WRniy4IQI03TojjauEZKhtJ5ksLW5h4hJPr9gsWFPqPxjKoqaOoWY/NhHAeao3G6i+xdpGpH
      UA6oq1VYvIuEINZRmhyntN2Bf9o9qy16NH7xGmW4jxq++MUvsre3x/Jy7gR86KGHAFhbW+OX
      f/mX37f7HqZDt55ZDYsLBdNpw97eFEUpi8hw2Gd/f0zW/BGGw2PsNCVVMOzu7bHnHCsrQ/aa
      kpXBaQgT0sJtaOrOr1WYtpHs+RsSebuOia65vj6yInw9RCCaBq9VVpQ+sgKaszeI5uOLTJnP
      17IJdxXtwvqKprdKmSYkl1UtQmhyv28z607ByQGsMYbRtOHY2hKj0YSd7RELC312dnK1eW9v
      TH/QY3lpyObWiBgi1hpCjISgXLy0jXeO3d0xdd1w7PgylgDtFLZfw6eaiKEdnob+CsZXxJD7
      j3OdwOSgPzlUmfdtCPKmx71+VPDJT36S7373uyws5Dlx8Ofi4iKLizc/tjnAIQO4vLHLcNAn
      C+LnxpR+v8dsVtO2+wwG+e/JCLu7YybThqS5aNMfVGxs7JCSMi4KqmYb4wqkaYkpT7zCQr23
      hTz235Da6fy+7Rf/a+TYSd7UrbkOQia5HeTMr/+9JBGnFYXLmYO5KpuQu6xgnleP5QK6t0Vs
      Grzv4XxB2zbdEasdV8kYrPMMB5aL6zsALCz22dzczQ3+dYtzlqr09HoFm1u7aFIWFweIEQaD
      EsbKZDKjKBxF0Wd/d8RQ3sC2E5KrqHuncUun8nkDXdOQsb6TaY8YUWKMGKHTWM0naQoC1SIa
      bx2b9E5xyABOnVphPKqzPme/oOqtEmKD4hgOe3jnqKpMbqtnM0obqfoVGmZMJiOWFgtmtdL3
      LWY6JcSAc5bpbMag3yOGFlKAzReQdnTlxjE3qLQ6w5o88Q5ij4MuscL2spY+imiuypa2l4Wm
      rsr7H5hC1IYYHNZZ6jhCTW8uciWq8/4DE2uE3JYJWVZdEGJocvbGeTTm3t6YIredXuqOeo0s
      DAqc993ZAmPKcgFUOX1b9tVNp7QtYrALJYNSkfFlSmtQNyFRMC6WscM1jHVYV3T1hZaUAqXv
      k0RIKWYX8YBP1QXkOcZRxJXEeGVBuYUbw+EgOI1ZGBbEdoa4XHwKMqW3ALOgWFvMV1VJe7j9
      V2n3coosDE+ifkCvcNR72wxR2maKrYZXOqT0LVq3EznATQZNEe97Hb/mCj/mYHorEUtJHSfd
      5NdMxOuaz0WEwvXnq3xueYyYjjbtfNnRrwVCg7oC0z1X4YTctJYbcbJkfJZ+9M50nWc2M1MB
      7bJS9XgXiYqvFhA0n29GxNkin0q5+wZFu48RmNk+ZvE0VEOcGEg6rxukFNEu4ZBSR+3uqOL5
      oHGdW7mVTIKQckDb3NoB3imOkEZ0qORJmvkvV44rcjYrJzjK+SprvMNFZbx4gmJ4nKhNdkn6
      i+joMky3Mf2l3JCimo9AlcMktZzZ8FiXT5yp6xlEMrdfMwkOlyuDhu7QPIXSDjq5kjFI/m8r
      jqAtkg7u04lUNYH4g/8NgAZQV2Ee+Q/wsSZZj+lU7VKK0PUop6RZaLdtOncrdm2dzZWeBkBT
      wieF/UtoNYRk8LaPzkbESy9SxSn4gpkfYpbPgKuwvsgrfdfUb50nxoDz2Z+/ckhH5gqFtqVp
      63w/TXhXdDWb/P346qpq+y3cEA4bgHUgARUgCho73XwSIkrUQEg1pmmwO2fBGBo/RPoLtGma
      i0impGFCazxeDgT9IuNxS79fIeUC6e/8pxCvKCXI4DjWedpmii97GGPYnzX0vKMOEW8NPVMR
      ksnjUs38nxgQmw/n8GR6hIjgxVylxKBdwDyGn/zhlYctl0gf/8eY1KK91TzZAhzodqqCeENM
      MR8MIobYTPPKDFjJHPymmeV2TQOzADQz4miDMs1w7Zg2BprhKeitYF0W3S18QYi5H9oVZSeD
      0mBtdvliil0ArmjMRUnrPClGDg7vyDGCxXWHib8fJ2n+bccRbNAGh8MVJTE1V+pMV6UT6zim
      2DyHIEztgLLeRWYrhCoXzmInmxTKAW6yQzOYYK1nFlusNWhVkD7xj7CamZBIH9cFnCKG6d4e
      o+mMP3jpZ9yztML50R6nhwv83gMfy1x6yXycg9y5RHJzTNQugyPzIFc1i9yKcUe2N6pmCrj0
      17BFRVNPEbFzmRVNEU0RcUVWsTBuLtcCmbGqpDxBjUPiBHPpp5QaaMURj99PmwzGFx1XiKxW
      163kYgzuIC4h0yIgU6Gtc1jrqEOY1z20a/6JUTHWgGYDdM5x05kQ7zM2NjaYTqfccccdXLhw
      gdFoxP7+/vzft7a2uOuuu9jZ2WFnZ4e77777po/hcEdY12Se2rbr3AZHgdMqqyYDsr9LmRqm
      g2X02G0EW2J2zpFim339rv1P+ys4Z4mzbdoQsU6YhTFRW0rbx9oa1XxmV1Z7aFAMs29+m/A/
      /s/cVlZ8/+J51scj7llaQVOuxqaUeH5jk/XRlLM7e7y8tQ1JUAlzHk0M7Tw75H2BpnBkk48R
      RVCmdUtTT7HOQ0e60+64JOuunBGQj0sy8+NbY4oQW8qwjxtfoh/3UVdRr95PPPFxGimwvsCY
      g7456c4hyw3/mhIHMuwHWacDt2d+TGy34oemRjQSZ/vE/XWYbCMxF+liPBAH+OjgwoULvPDC
      CwC8+uqr7Gxvzyf7zs4Ozz33HJCZoc8+++z7MoYjGWNR2rlEeJJOeQHwUmBapRxvUtsSHS6j
      Arp4G37n1bz1HzRuoDjXp8HhY6JRoV9VJI1EaUmxWwHFZ21ODagaxn/yZcIzz8DlDe77q++w
      fvspLq+usD4e8UsnTmCMYZoif/nKi5k1qInlqsd/+Mu/SuG68wSMZl+dYn5KY76ZRe/8wpUH
      9YPcA6wpxyurt+ecunWdq2Hmq721bp41Cm2Ddw7dX8c3+5hmREpKq0ItJYOTD3XpynzuV27k
      z4F6SKnrm0ioGFQDYbQFkw3UFNjeAu1kDzGWZBzYgjTdwUrCxoiLUwydPhKZSSmmQEVg5V5g
      6SZOj8TG+iX8YInFQcnWxmX6i8uMdnfoL64wqD7atQc46pxgW2JMrggnKShMogn7XcvdkMIq
      briGDk5hpO2O6BSMEcxsTCorMFkMChVmUtFv95kVq6RkM7symax20B3qFmMEMUiC+NxzpIvr
      EAK3nX2df+eRR3jq+CoLZZndEVFKa/i7t9/Jl1/6GQL8m/c+iBPNQbvpaMtyQAYSUsx0WlNU
      8Dv/w3wnOODzJ28Z7pylvjSGUw/hXJHpxjHLKs71iYyB2OJnm8joEhJqQkzMYkKLYZdxsszG
      uzhrCZoruEXZI3SZI1S73QmsSchsD7d/LjNCrYfpJl51XtU2xhJTItmSVC7SmCWaZEgYqtJh
      wgyacVepvtmV4Annz+8QzTonl/vMpMK4MbPZlHMXt/jUr3z8PV29bgKvX97j7PouT71wERNa
      NncnJFWGvYL17THPvHKJS5d2qdubk+FKky3aZ/8Y/+DvYhZPH3FIXuwxq3N6MMTMLSn8kLpN
      9IpETH20uo/YKouVEuKYolqknizRn20za2ekE3fhTZkn2sIx2H6RweR1xnoKX1aMmykbkw3u
      W727C/Ry+6QrLMN/+l8w/Yuv0Hz9Gwz/+X+FrQp+x1ps3Kdgh6Ar1DHx7dfPslRWxJT4zvmz
      3L+6SuULYkp4WxDaGWKkI5dl37mNgiLUMWDEsNxzJBVCtUbTr6mml2nWn8ff/ok5H9/5khha
      xFtMO0Y2XybNckOQFH2Mh8q43P3VBhYrg9YbmeBWj6mrNYIxcwPKBwUWmNgSd96gqjcJrs90
      8QzOF51CnuCN0tQNhRMwhqLsk9qGOhqcyw2Zs5DALtIbGpq2fV90gXYuv4E/doJRnXjwwTMI
      ytb6G1T99066u7g15omnnmFUK99+4kc89MC9nLu0R0iJU6tDzl3c5OyXv0Yz2eX08eW3v+AN
      IF1+nuav/xfM4Dhm8fcOG8DeNBDVMCgtZWFpQ2J/GvDOEFJOZfou6xITlJILN6zcSbOZcGGM
      dYs5YyIBWw1Jaw8Qxzsgyuu7F3hh8zle2X6Jwv4jFsslFsphJ4+iGG8ofv3TuPvuxQ96iCjW
      Ci5skvQYAKUVfu++B1mqKpoQiN3p876okNB0bYRld86wRawlxJqvvfYyW9Mpk7ZhUBT8k48/
      TOEzwU0WTtCEGlPvkA3mymoqQNp4ETPbZta0mZlYDNlf/DhNhMXK4AykZsaeFNQh1xJ6vRHe
      eUapwhvDXg1+tk+abOLaEYUvSMWQdvEuvDE4azDWU29t5/7r4SKmtGhq59Vr7yzOKCm2hBio
      m4bZOKEq9Pv9mzJJrsDy4Cceoal3WV7q84Mf/JBTp06wO2kohu893rjr1BL/9m99li996Us8
      dOcxLq1f4Jfvzbqj1giPPHiG3/7tf8DLL7/EKy+/9J7vB2Dv/AyD/+QvkSq7iocM4PgwS5Zb
      6WgDybE6TMRk8AIy2yWpIfVX8CbRthZrs99cVwu4aZ0nYFFdmYC9ZRBLWY95fuNZ/vin/4om
      Njjj+P1P/PsICWssoW1R8ZSnj6Mn17qDuRsYvwyupKXIVWSEj508MU/7pdgS613i3jls/zaS
      dV3ze25eSW1Dr9fnkROn+N//5ocYEb5wx104a7IvTpZdj8ZRkGimI8QViHGkekKxf54w2WHU
      JnreMKOgGZ5k0ih1m/DWMmkCfe94ev017lhc5vJkRN8VHB8eI8SIEknA3YNIaCO4FepyiWh7
      +KLoimpC27aM/+W/Jm1v0f9n/yw/By5fQwxWA/vjCSm1OOcZ9vt4b0g66YL+m4kep2/rAbnx
      5dOrJwG4446bQ4MGcDYbfq90OCPX0J6dNZSFu6lUaBGD9K/IXh4OglNLamqw+YBoZyyowRql
      ufwK5fQSafVBnIQu7ZYzJTG0JFtCqEl7l2iXTmb1BRFmdYs1niqN+bsnP8E3XnmUqJFPn/kc
      i71BRzuYYV2P17bOcXpwnKIsGc8Cjz11jtEk8IVPnOT0WtH52UJsJriqgmYLm2a4sEtIBXWj
      KDF3ZR301hpL09T8ZOMSTgwJ5enLl3hgdZXSWWJosq5OMUBaiyt6+eDh0WXc3nlmIRGSoV/A
      jiwz6d+Ox9KvHKsLlvEs0CssTTvmu2+c4xtnX6VNkQdW1/j31o4xaS3GZAGBEA377iS+XOhO
      pA94coap3d1n8of/N+GFF6Bpmf6Lf4H+/u9TnDpJr7LsjybMmoZBv4f3CWNnwKwr1PVAP/pB
      6QeNw2zQFPHedZSFA8Erpd25QDm9TF0sUQxXODgVElWsy4rRthrS2B5uukHsLeJ7i7RtyxOv
      f5fPnvksjVSMNPCf//o/Zbm3wvm986QEmnIPbBMC//onf8h//Gv/GakW/tc/fprvP5/lVL7x
      9Hn+u//ocxxb7uVguNkj1a/QyhLGQHKnUdPPrYy9PrNpZq1qUsrKE9opH1s9xr1LK+w2Nd4Y
      qrKcKzX4oqJJNbqfqPc3KMcXMSTaxTPI3kXKdsqWP03bW8Ommv7OeRb6Pfa0x/LaaVJMJFfx
      yZOn+frZV7EifOb0GUonlD7Rti0hwH4o+JcvvsjJwYBxmxUjfu+++/GuO9JpNoPYZYmmMwwJ
      ZxKzWT5Ncnl5iRQbkCVQQ4wNarbQ9P50TL2fePjhh+d//8xnPsMTIpw5c2b+s9tvz30H9913
      H/fdd9/7MoYjDSAlM5flUFXa7XMUows0fgFZvYd61qkam1yF1K5qaYCwcAq78zJNMpy9/Ao7
      9S5ffu6PsOJY6x/jrqW7KPfPQtmjWr2f2FU2n730An/49P/BpdFF/tvH/jmfv/13efqVK8Pb
      3p/x3LltPts3NFH56tlNPn/7HTxx4TyfPHUbJ/slYmyWGRehiVnESoDRtMaLcvdK7sVNMVJU
      /VyUSzG7b/UUaWsEpbf3GjJc+//Ze+8oO9LzvPP3hQo3d0Y3GhmDNJF5SHFIDiWR9JCSRUqy
      ZCuLkkzLlnXsdZDlXdvyBqc96ySv1xu84kr2ipYti0tR4YgUSVEkJYaZ4XASBsAgzAANdEB3
      376pqr60f3yFnqEASkNpzHA87znA6YO+fbtw762q73vf5/k9FNk8YfMS0lcMRZOWKBCDs6jg
      CEKxbnKSZhspBC44diYVn7l6hX2dLjtlyScuP8O+bpdER4ShF5ZUO6bynN9fuYwA3rj/EFJI
      jPXoTpvOT/xFhv/25/CbmzR/8i8RCAwHI5SWcc/g7G6bNsiATnJMNUWWj6nMi50P8F+2no9z
      vPH1812BN77+L4l9vBmLQtQAqSSlMhVhe4W8qK/8C8cwzqJ0/QbUQ5sbYRYCkHkHt+dOlLM0
      ZcL7znyQtdE1PvDkL/Mjr/pxhBmjzZBQbpM2ZhiNS5q55J7pDpcO3MevnX4/B6cO87aTb+PT
      n/09nlmLk8FESfbOthDlKuu2y+Mbazy+vobxjum8wd7eIUw1QQrBpCj5wLmzBAINnbAxHvP9
      d7+MPIk6IysC3pu4/EhjwqXCYUbbcTnWjVd6N1in4SdYD205oaocNu0wChrVmqLbaKCUxBiH
      d4FeI+N7b7+bqSxjZC2plKSJRNbTYxmGBF9hnidbNt6BCORpiq+HdY1vfyc4j/zI34b+pV3o
      uXv5u5En/tQuC9TaiIoXKEzVwocXhrN8qZ6rm06ArA62E1LiTElebWHai8jOYt3fT6MhXEYk
      CErhvdi9msZ+e4OqssylEw5NH0ZJhZaaI3NHwFsqM0u+c4WQtlASfFCgZ0hkws980z/koZXP
      IcKEH3/HKf79R88zmFS84zWHOdTro/yY+XyB5XaXC/0t2knKidk5lJTILIrBnPMstTt89NJ5
      AvCapWW0lHFOUJvOrYldFe9sjHZdf5bc7GCbDWyjh3eWdLKBlBBUg0FjkaS+a7Rv4ApD7L6s
      DdfRUjPT6LHcayMQdGUDY0o8CdeHgalWgp1MCJ9/L4fWr3FCaSokW/PfTRAJOskwNiK99OIe
      nAvY8RpicOW5N6caxouNj2CuJFFU5TiCs6TCmz9uctd/vXUzGnHrfNTGIMB7BB5TVajRJrY1
      gxQgVRqpbTXZ2Rgb257WkjeaURcjPC7t8vKlV/LdR76Ji5M+k/E2rWAIzR5lNUTvXEHrLnZn
      gOrs4a3LL0cV27x9/z1YpTnQ3OCnv/Mugs5INCTlRVx2G6tbIy4P+rxsYZHT1zd4bH2V+/IM
      pW7AQRWDsp40AztVSQB0muKMwVgTO0i1ziesn0WZMePGIqm4jpxskU36gKdIpphk8zRazV0p
      UWyQKkpTURYjPv3Mp8h0xr37X0euG6Q10U7phMrDpHIkWiAnO6Snf4WX3ZB0qxyWfpJ+Kdkp
      q13fcrehGU2KOpjo+W/ODbJ1HPYJRO0feO77L9WXVzedAJNklrERTOee1GwjnKIlA8EOsNsD
      AmCSLjRnY5aVFDSyGHKhdMbm9pBuu4GUDiclx+aOIkbrHFAaLwJyuIYKhhKNRJGNV9mix3S1
      hk4sBAvjHdLGCGyBGBRUugVpipMBWV3jtrmj/NDdr2BPs8m9e/ex0G6TJDriCG2FFxItJa9b
      3k9DJ6yPR1hTYqVA6YTi05/DnjlD8zveiR5fQgRDNXscLTx6uI4YrLGh95A0NTrv0Epjd+UG
      qvGGb7hyFf/p0V/ks1d+H4Hg2uAq7zz5rkgxqj+MQWgWOj0K98XrW6BGPsY/qRJYH+8qbrRD
      8qWu5oI6YSfU9k1XH9tLStA/Tt2cFD+C/fvnsdZxZU3TbGaMxyXtToP+9pBGIyNYUKOouiS4
      OO5PEyaTCc551jf6tFoNyrIizRLa3T2EYkzurlKgSbUgy5rYoDDNJUIZWLeGXqtN1m1A8Kjx
      WSZhBjXuk7otRBkIqUSoClld4FCaMQopqYqmkWv9MbONlMxeRreP8NbbbsNZW2/WE7SKYrLJ
      0xcwjz6K/cKjmJfdA3tmCNM9RJIhJ1fihjZLaCdjtPSgm6CSOp7Jgajjj7ynmzd5+8lv4+Gr
      D6Kl5oETf5rm5ln46N/b9TuIxgzyT//vTLV6FLf4jCoRWOzc0PRIigomv/Cf8FtbpN/6YwQz
      fE7EOn8qsklvUPhsha6xlC+h0f94dTMaUUl2+kOsC1jn4oe/lbHTH1FVFqUVWZpQVTF+qJUJ
      SusYFDXPRgiSRDMaT3DW46yjbdZpmAHSOppBUMkmI99i5FPaukGOYaesGAwnIBIIFUrOQrMN
      nX24YBHeIO0WzpaE8TYun+a3V5/hqc0NDk9Nc3bzOj9w+x0sqxJWnyJROYqAyzqQ9vA24K1h
      +K//DWFzE4DRP/3nNP/8j+Jffg+NVBCEpErncFJghUC3ZnHOE0xZ651uyDaiYwsh2Rpv8tff
      8LcxzrA13mTaGUSxtft6hl3inIviu8Pf+NyHVaYEneG9xTqPH02Y/NpvYp86TShKJp+aIX/g
      bWQLc0gRh2QCasNMwBqzK+e1puJrNSFmZ2eHf/JP/glHjxzhTz3wAEtLS1/tQ9qtm06A2ZkW
      3kOjEdmdQmjSYgvZyhHT0xjjyPMErXIQksmkpNeMwXeJ8oSqwDtPqseUIUVrRdLvY5KUcZJR
      ylnSZpuAZCrN8DJFa8O0lFwvK85eW+Fwd4qz/SF3zeQkGhqNBlI0CIkAEkQvRzjL7X6HB1dX
      eHj1KnfOLTCdlgQPVrc5PYlDuNw6NrdWeVlukM7S+cmfoPjtj2AeeYTme/48as8c3hn8aAyD
      La7qHONg39xhfN0MiNHyIg72lNr1HBhjOD53HK3iyeCDwF1av8l2IGTMIyZrIr7hL6HbyxFq
      CzUXNKAEeGtx587hdwbgHPbMWcKb74+b3iRFqee4qDfW/bqWajtnXihP4CtezjlWVlaYmprC
      mBebXfQnq5vboCHSBwiKRKfYcojcWUFPHUEqT54mTIqSydiAkORZwnA0AgJGa7TK0dJghyVJ
      uRb19UJiGnOI4MizqVpzD0oqrm5XLE+nWBF48OolHlxdoZ2kVM5xZGqGhbzF+tChpKCVtOJS
      QSm88zy9dT3SJqTk8mCHvtlLs9GlFHv45PlHWB0NkULS0JoTd91Nb+cMzE1T3XknSaOB3DtP
      c3yZUi0wkAlbKD797Gex3vJ6nTCVT9POmiQ6wXlHZRw6xIEUrkBU2yBzUO2olg3+SwaVOue5
      Vnj2ZB1WdnaYbzXRMt4xI5fUoHpdOn/zrzH6v9+L31in9Z7vQSiH2bqMkwrR2QNC7BKkb+wp
      hIg4F29fbE9wyec/8yjp9BzH9s3w2JNPs3zkOA2zxbrJObJ37kX+fV/5urkLVDuApdLRAaXS
      eFIovWvSbjYauFQjdYbWmrxhsZVhMJpE7btMcK19TEKPpIosnMsjyWZZsdwZc76/zav37gep
      cT5wrW9o55pXLi7zyNo1dqqSl+9ZYqHTRUhFaQxZIrnWv0rpxsw0D/DQtUvMN5s0dMJbD9/G
      pZ1tsiTFVZs0uhmv3buf/3j6MQKONx84TN5oYZITfOrKKs/kmqP3vY4nLlzkXbfdxidXrlI6
      w5X+OS4PJmzt/A5SSL711DuRwmGqCo/i4ZUHedn8KaTZAjuMXaWyTzVZx0lflgAAIABJREFU
      J212IZ2B+VOEB/4lsf8UQCYElXNxa4tfeOwRTszMcXbrOq9eWubNBw+iZKizjiMfVShB9vYH
      YPMC8oM/EtGJgFcZ4l0/RzqzXAeDB5Ik23W5heB30zFfvDL05g9RFqucv1Rw5z33IIPlzJPX
      ka0p4IWdAB/63Hkq43h2rc9vffZpvnNmgX/07z/Bj7zj5Rzb9yeLo/2T1i3guDVg1t9ItC7j
      EqB+gXWS1eaO2HERSRIHM5migeBjF85zz/weHr++zsnZOaabs/hqwiMr6zy2sUamFEpITs1M
      02vPcGg+Y1xBWZZ8+uqzAOzv9HhsfZVXLy2z2OnQTkesDa/xyNUH6RdbHJ17NZ+8skUryRhb
      w6dXnuWuhUXe9+RpvuvU7eRFyScuX6KbZSRS8YnLl7h7zx5SlZLphHPbm5zZus6h3hQ6iW3L
      z11bIdCjnZTYrMN9B15L211hUu3n6uAqg2rAB0//Cq2kSTdrsdi5jaTRIsFji+uY0iLG1wiq
      zTPqGM0sYXG6gZTR9rjYanJkaprHNtZoaM0r9uwlS+vopPEQ/8SvIGxs3SqAuZNgowMMqIeN
      ddK9lBhTRvx6jV0fTcrIE3qR69Lph0n27GNfNzAuLXbzEmtbA8rtkhNHDr6g51iYbiGEIEs0
      C9Mt0kRxbN8sneaLT3v+cuvmJZD3SCV3zddBSEBGs7xUmHKMrIMijKlIfUxuqaqC9eGIz11b
      4cHVFQprMd6xcPAgyhS8ZnGRJ66vM7GWb1jez6zskxTXMHaJPOmS5JpvPnwbd8/vYbHV4vJg
      wHwjR+JoJBnnNk7zoXO/jvWWZtrmcO8UF/p9BHB1NOTqhXMc7k0hgsQaz7cdP4W3nmaesjkc
      keoEKQXqea1ILSRKiCjvruvkwine9Mpvpj/ZRASPrlYIwfAfH/t/WRlc4Zce+0V++JXvIU3z
      GMskJTqfh8RQVp6fff/DPHh2FSUl3/Wm47z9NQeRwbM6GnGxv02qFBNr+cL6Ne5vHUEKcNUI
      8fn3IsqYzywA//qfuunNElCHCgZ0kmJNRVEUGOtpNnNe/ISYjFe94Y0ENyFrtbhw+kkWDh3n
      ja8/zGBSvuBnuefoHhItWZhu8bLbFmlmCT/yjpe/yMf6x6ubl0BC1neB+kXuX8GrhCBjtFCS
      NXbvDlJKynJMlkX+znyzwfGZWR5dXyVVilfsWUJpTZnN8MlzZ8iUZrnd4KHVq7xi4S7mREDq
      HGsrjHXkSnB4ZgopJQeE4EK/z6HeFBf729yz9Co+fvGjBDx7Oif53St9DvemeWZnG/c87f54
      XCCDpNtpsr61hXGC/dMzPH15g5//8Gme3epz990zvPrYEk9srLEzmbBVFNwxt0A7TVkdDclk
      i6PzswwnA9rqKkdamv29gyQqZamzzIGp/RAcwUuMi1nE3nkev3idz52JaSbWeT7we0/z+lML
      tOUOPT3FPQuL3Lt3Hw9dW+H49CyTS88QkgTd0bdmJYnnJT+KOjS8zj2+ESAhhKTdzkl0SvWi
      7wES2m2AeKU+cefdu9/ptm+dv/D1VrfQAkVAk1Iaaww6GKyM4Q9apVgzQekM70yUG3uLMQUB
      WB2NOX19gxMzc1zsb/GZq1d425GjJFrx9qPHGZVDppPAWiFo+22wO6hxHxrH8BJ0kkdyHILH
      N9b51XNP7Z4A9y5O8Vdf/1M00gaX+yu0koKdqiBVmkQE7l1c4onr66Qp6CAYjSakWUqWJYxG
      E37+w6c5eyW2J888OuD7X3k3r1hYwlSO+5cOkmcxjM44i7cBrcAlDay+jdIYXn/wTZzozXOm
      v1rbGyM+XSCw1mC9Z2Xw7Be9lkoIvLeRjh0cbztyFCECb9q3jHCGwXt/Hrl3L/q7v/Xmd6az
      F9753hq85VFaE5pzGFvhrGVSWpp5Spqmz3mev0YryzLuu+8+9i4t0Wq1vtqH80V1sxo0RJy3
      VhohLUXnAEXh6KpGJKWptM7HiqEPvrB459A6Zand4vvvuJulbofV4YjZPItmF50wLUtm1Ri8
      pO22GRdQ6hyfejLOkTePMSwKkAkphpMzs3ym1eZCf5vFVps3HrydXEuUTjmmDvMm29r1BL9r
      /CkOn/8srw4B8ZSAg2+i+5ofIk0kk/EWIW+ztj3e/T+OSkNpHcstSZCrhPZtu/CvEAKmKpBC
      0cgjTU5JzcmFkyjb567pHiVVNNAEgbGOKljWBqucHf0Orzr5Oh46c51MJ7zrvmM08xRjJN1O
      C60kzlvC6nWG/8/P465dxV+/zmjzKq1jR0E8r0WYdVEzByKC0jhsCGQ6QQpJ5QN5mpDlt46X
      /VqrZrPJu9/97q/2YdyybjoBxuMYUra5ZZiZbjEpAu1Wg7WN7ZhaoiWtVoP+5og8T5mZau9S
      lKXw7O91UFqz1G6Q1OjvUG0jzbOQ9BDSUTTnyE1BVU4wIweloSEvksk5zmwHZho5F7a3WRuN
      mMpy1sYjzmxuctfCAt57bBD8/sqzNHSCD55+fxUxvPacVqfYRro+1lSkAkxIuf+efXzg954m
      BLjz0BwL002MLUhCha0mSJ09D1MSGK1cw6+ukt1+O40snvRk05hSkFUXCH6KkC0jlebjZ36L
      3zzzQcZmxOHpEX/jz34fy9N7mGknCAGdThvvwy7uJCQauWcPfm0d0WggFw/AN/8kspnjQkBJ
      Wfci4vInTzWVsZRVBH1572m0coKPWWZCypeS4v+YdXNG2A0zjBBIodDaMRiV9LotnPNkWYq1
      lkae1F9XpFkjgmRlfLpoqknBB4QvSf063ABK5fsQymPygGyMaYyuU5aK4TinzFJ+7elHUTJO
      l+ebTf7c7Xfz25fOkynNxnjMZlFwcn4Pb9x/iOksp/SObOs3IQKbqYJiZFKmQk7udyjpMigl
      3/WmExza02VUWF5zdBYxnuByFwkM8jl5d0BgK0v10MMUv/pB1D/8nxCiTZLGbDGfdPD6NuT4
      LNZK0u5+3nr8AT5z+fdgDG84fD/3HDyAVBLnAttFSQ/JdlEy08xJkgS5Z5b0+76F7Z/dRi0t
      0v3+70WpOHAT1kYftE6xtgTinqyR59haAqGkqqFd8WR1Jg7m/NdxTOpXq246AZoNjaBOJfSO
      1vACXmfI5AAkEjAkmSJRAqUjxTgyLWOomxAqJquYEi0Mavw0vrkPIzrxClhWbFfQzVJ2jCZL
      5+m1oNy4hCDntXv38VsXn0YKwTsPnaKRaIZVyQfOnSats3z3d7q8fHkfzlZRqhB3aqy5Kf71
      zju5vLXEkfXz/MS3HGEu2QDfIATPycPTdLKcnV//DXY+9yCdv/lXcCqr87wUKslw1jL63/4P
      3KVnoCwZ/MN/TP5t30r3vm/A+TjQQuXY7AhpcQk31gxcg286+jZOzJ3i7PWnarFc4OHVVT56
      6Tz3LCzy0OpVvvPE7Ryfn0crgQt9Ou95N0KlMVFSSgKCYC0Bia+KqDtScYospSStPdDOWbyN
      voykziQLwVM9Dx1SliXj8fgPvr0veg2Hwz/yMTcAA39UyuPy8jJbW1t/6GOez2P9kx6X9/7W
      jjAlxW4EkNApWdWnnPQh6yCk2HVxCYhE46qMCHMZ9TLOWmQokOUVQraAU1PEYFHF+mjMLzz2
      BQ5PTfPsTp8jU9O84/hJkuklCp/x+1efppflVM7yqSvPcLB3F69bPsD7nnyUibW85dBRGonC
      O1MPggz2xJ8m7H0l7//UiHObURrwxDObfPBzPX7w/j3MJUM2yw7ve/wLvP3sBczjj9Pb6jP8
      pfdTveH1nG9vMdtoMH3lacoPfQh18BDBRFmCvuMO5MxMpM15T5pmOGdJ8imCgtRu0VLzvOHI
      GwjeMdv+Brz3pFpzqDeNEpJPXXmWpVabxXanTryfoN2AbOowQuU1+a1Oe1ESpVKsfe4iFN/w
      59706NWowIY6JyDK0v3z4mWzLCPLvjJ99unp6T/0+7uEvT9CsdrpdHZDP75UWWtRSv2RJ9ML
      OS5r7S3aoHUu7Q2ejuwuMdk0NHaeYbt9pDZf1AYYYqxqjA6KZ6Z3Dm02SMQIo3sYMQ2VIcka
      qDRlGsnh3jSPrF1DS8ntcwtonSB7e+lMtnng0FHmWh2GpkIRX7xPXXmGXGkyrfj0ymXunF9g
      YibMNHI2JgX7F4/g5w8wfPg0sLb7fxkWhpDMIqsBLdHn1MwcG0/+OnPbfbCGrccf56Fei6cW
      5rhrXHL/9gD7yBdI7r0XHTxha4vGd3w7JmkiVUAqweUtQy+rSMjwYoagemSJprCBPJEUpaOR
      CMbGszLYYWwNWkq2yoLrkwlZ2iKXCiETpNRf9EbeWHpW1bgeeInnaBk67EY2SSFjJK2pnuOj
      ihps/DVaL+Sq/UIk3S+m7FsphfqZn/mZn7nxDzHes4SalylEJJuJxhTaFYRySNqdJwhFCIJE
      R04mNX4kBI/wY3R1Gd86ihHRHRVC5Giu7ngKU/DJy5cwzuOCp52kzDV67BSQZC06eYNG1kSE
      jD2dnPXxmH2dLsudLq9a3Muh3jSPb6zxmxee5vpkwm9fOs+h7gy9Rk6r0eDBs6tY52k3En7g
      rXcw12sSVI/SBT5yeYXH9i8jjWFfUfHEu3+Qh4hX2Lf8zqdQDz4EgH3wIfSxY2Q/9MOMyEjS
      BOepg5wtv/30Bzi5cDs744g/1EqxMaiYmHgR6I8dWRLTIytn+ZbbTjCoKo5MzdOfwGwnIxQr
      eNlA6gY39Aw2lJR+hPBRXGdEhZIqgr5qafdz3tno2fbOwm5EVMwc+0pWURQ0Gn84lj3eoV5I
      9NULe8wLedwLPa6bToCqnMTpZhI7H0LKuN5MG8jBNVxzljRNkVIi6xfeWhM7EcGiiwt4mWLk
      jRBlgVIJSqdcH1py5RlUJfcfOEQrSdnf66FFkzxVjMrIERpOHKmW9MdDfuHxz9MvSx5bX2No
      DPcuH6STZjy8usLKcMCx6VlevTiHVClz3Zx7Ty5x6sAs33Hfbeyfb0VorFBInbFTlHzT4aNs
      t5pkt9/Jfzq7wXDbozLg9uMcP3ob7oknaP/03yJ72T2ozhTNRkZhHImoePjKZ/js5d/hk5c+
      zrgakkrPUmceoWLruNvQ5Bqamaa0gflOk+Ozc8x2OpyanSNLc7RStBoJvuoj3Biy+d3uVWVL
      EpmCj0LBRtKkNBOkUPV03hICuyEazjmU1midxCC/wC6B+itVux+0YPnERz5Kd2k/efLFV+nx
      9jpfePxxhpViduomnxsAl84+zukz52jN7aWR3PpuYSY7PPrYY6z1C/bM3WJ5Exyf/sTvkE0t
      IoOl0Wgw3rrK7z54hsMH9t78O889cQs/gE7qlBWIkD6QWsegCCIJ2Zoa8+cgVNuAJVUeW2zF
      wU22ByUVxpS1qK4EL8iTiv985jFOzMzx6auX2dvucGJuAS8TcgXjJGaIpVqSKEEjaXPn3AKf
      uXoFLSWvXlrGeDh9fY3SOVKpeGanz/rEs6+RoalYnm+zPN/Z3XiNzAhXWmZaU3zzvi4jl/Ha
      O+7m//qNx3jmTGz5bl+V/NgPvYpkZ5PwTd/IWidwZKqLqcYIJNONFGfh1PxJfvfiRxhWAzbH
      1zl+8hhaeZSomG9JxOQ8BEshZ8hrkh5CUhhf20dhptmJ+rZ0FjG+BN6AjEubXDeBgFU2JsM4
      Gxmr1Bh2H/VYnpoELRVpnQ3gvYvJ8l/xcpw/ew6dCKYX9+4iJWMFLl88T2d+mT2zs+TTXxqn
      aEXOK16xh5XVAdMHbo1B1HmHpYU5fHbr0LzNayt055cQAYrhFucHY+xkzNLMFw/fbDXiwjMb
      7N+77+a+mauvLsaUscXmHUolVONtpFIgNdb6aMYYn0OaawRbYk2Bly2C6pG46yTlOZruArl9
      lnT8FHLnEdoqTm4/fOk857e36KQZwVXk0mFtQUaBmpyntfMwyeBRhuNtnry+QSIlzns+v3qV
      nD7Hpjq8bu8+fvTue7h9bp6ZRiMmqUtdO6Z8vVyRfOHqwzx05bM4Dx5F6jYoJgM+f2599/9c
      Fp5nr+6QHDyAe+cD/MrZX6Eyrn4OQVGMEVLT0DmNpMG3nPx2UpWSJ5EoYU2JsQaTLgOSdHIO
      Va5GJDtud3kYgmds+1RujAgGhIp/6hJC7MqdhZQIYmrODRy7TjKSNCNLmyQ6x1FQ+QnO2xij
      9FUpyYHDhxDecu3yRdau97/ou0v7D1KsnuPM5Q0mf4h+SNgRDz14mvbsre8QAJONSzxy5llG
      o+KW3y+qktUrl7i2sUXW6nFgT4/RaMC5py9QPE8lopImhw8t8/BnP4sIz4NgOucYDzdJ7VW0
      DLCblBKwJchJQTl1kOHP/QfE9DTtd30TImkjZPLcPPLG+syOCL5C6hxJwIqciXH88ukneXp7
      EykEDxw5xiv27CFNY1SQkIpgC9zaU+hWgktn+djKiBMz01zo77DY7nCsKymrbYKaouMvM9ZH
      0GkTYyyNRh6lyyHQn+zwvkf/HY9e+zyBwO3zd/K993wf09Iycin//S8+zrPrEbmileDvfN9r
      OTf8PT507tcZlgOWusv8ubt/gFOLdzAux6Q6jXnItqCVNdkpR7SSJo08371oAFGyMFlBmTUE
      ASMbGD2F0406zjUKzrNiFU2Azime72RxLk7WIxbyhgUz/pzSz73OLhgKOybTTZyxKKnwKJrN
      r6zUYGtra7fb8qXanV/EWf0S6/fdx4gvPdv+cp5ne3v7i47r5sfH8JSb7gCpWUG6EUZOY5MF
      KtHD6j3Y0lPoPUw+9hnshYu4p84w/t1H8KV/nic17OK/RdIiqA5CN/GyiZQKUwdqv+XQUY5M
      TTOsKkSdu3UDiWCsJ0k0PtmDkClvPjDHvkbB6/bt4/BUF9JpZL5IlnUh6ZGoikk5YWWwEpn8
      SiJEYGF6ge++63uR9fLgz97zA7RLRbUVUEmbH33gTk7un2F5rs0Pv+1Oji51eeuxP8XezjJa
      at5w8M0cnzuOs4bfe+YTXNq8gJKKVtYCAlN5O8YaVQU3Ppxpmse7pp6nyk9RiikUgtSMEOMJ
      eIk3ClwW7Zp6GmcNVVVhTYT6xg9/gpSKgI9eZBvdY8HH19n4KgIFVDO602DXZPTVrC+1Qb3x
      73/Y5nX3MS/g+V/I8/zBf7vFI+Nj/+AdoNx+mqS1RBBRoViZMjLx155gNOky+Gf/Csoynqnd
      Lt2f/inS+TmMsVgHeaaQwuODhlBFpaT3cYjkwRhDogUhQJIkKAnGeJJEsjkc8eGLF/iGvct8
      +tpV7l1aYn8rktBIF3ZVqN47hFTYss/IOp7tr/C7Fz/G97zsB1FCkkhNkmieuPYkpS3qLorh
      6BdWcZcu0Xz3D1FWJQ05ROgckbQQQjEsCz5+8WO8Yu+rePTaI9y5524+dO43eHztUbpZl1ML
      d/KW2x6gmaSkaYa1phbQeTItY0vYOZzzmCd/FXH9qd2XOyy+HHX0zbHPHQJqfBarphH5PM65
      COqFOodBYn1FacbokNXhHJHSp5VmZPsoodAyx9oS4TVJluGsp9n60kuI/xL1/DvA11K90OO6
      eRCWzIPUEX/uTDx7bIkUoJf30vvH/4DhP/uXyNkZmj/wfag8i2QIYGtzh3Y70tK2trZotxuk
      aWx3fvzyJQ52e6xNRnSznFfu3YsUsLk1piwNnU6T6+OCs1vXeWpzAx/gYKdHS0yTZxnFcAfv
      Ao1Wg/FwzML8FM5bPnL+Y3z43G9Q2IJ+scWfu+cH2Te1jPeB4/MnUSIgZMLWv/hZykuXoKoY
      /tN/QfPP/yhVIpnKRoRynYIZsmSGd5z6FgiOhfY343zg7sWX8/GLH6GyJa8/8EbaWaRWWBvV
      sGVl+fiFj/KW42+NBjCpsNYhLn8acfEjz3tlBf62t8RJuYQq5Ehv43qfODl+fgdHCU2iM1S4
      IU2RBOGYuEGMS5UxbUeiQUSciikn8BU+Adrtr+zve6H1Qo/rFo4wIETkuBASJQWm2MEKjcg1
      eE/2wNsQeY5oaII0eB9jPJNEUZYGY2I4tnOewXBCs5NzebjDQ6srhAAv37OEtY7g412gLA2D
      wZhemjHXaHJlOKCbZiw2WhTB4csSLwKNRko5KRgOJ0x1Uhp+nbccfRufu/z7bBfb3H/4LSz3
      lqKuBuqrcQziU8t7CTs7hOEAtX8fKtHIZptt42ilFrxjUsQP9Whk6TRB+S3GZsy33/HdbI6v
      U92QgDtH5RyfX3mIlZ0rfPzib9NImuzr7Wf/1MHoIb7Viy0V1oeYJZDMUJpAKAPdTo5zjklp
      ybIEgUeKuMQJxMwzgUCLDEsUxAkhUUFQ+gKpJWb7Gon+yjuskuSrv/S6Vb3Q47r5BAjEMIYA
      UgXCaItsssEk7aBk1AKlrzpFplpUdgTOgimRwTDbbjIuDJ1mFvUsriTvNhlOLPs7Xa4OB0gh
      ONjroaRAaUFZlUxNtQgBLg/7bEzG3Lu0j0fXV3lie4PH1tc4PDXN5Z0+B3tTfOP+I0z3clK3
      hhcNBuWAt5/4Ng5NH+HS1kWAGiAb/cs3TCTtb/82Rh+Zwj3zDO3v+bPRqigEaaKxvsHOcFIP
      mhSToiTROUXZ5c4999DOO/T7A9KGxNjA+saQXrdJL53mly79O66PNzi9/hi3z91Nf2eCVpJb
      RVVMipLxuCRLNb1el9WN68zOKvo7BVorxpMKnSj083ZmAkFSp8fbYAiEmNWGxLgYk+rLEY3R
      VaruC7MovlTP1S0NMc5bwCMGA1T/Mi5tkc4cQrqYUKisw1VXSGxRX61iXJAJY9qdebxUeB8Q
      aSPm6aaSq8MBL19YpF+VXOxvc2puDqUS2s24vlVKc9grfuSO25lvSl6ztEBTSdbHYx5evYoU
      gjcdOEhTD/Fmg+AcLjvMjFIsdOdRSjPbnIHdkDuD0hqBYHzlKu78BdJXvwr52tegtKp9zRKd
      aDKVkCQp/f6QjY1tpJSMxhVaKzAK1Y5ZYo20yWAwQRCYTEpmsnmWu/s5OnOc/b0DBKNIUk27
      leH33BXvXOvrqMVFwuzxuITLU8qyQuJZXJxlc3MHrRXW+pgkWbvxuPF3vUUr3SjykWo0oqkV
      oFpI/NYVvFCE9GvLbPL1UDdtgkfjLYT0iLXzZK6kaM6Tdhdxa2fJMDiV4QGnW5B1IIlhEtHN
      VcVQOu+BmGXl6rWysZEz6om8nrhKiU4pIQShKlDjK2htCFN34r1nbWfIv330EdpJSr8qOT49
      y7cfXSQ1KwQkNtmDzOd224beWYx1pGkO+GgbPPs01ecepProx2i+58dI77idrN2MyZQ1ZDZr
      tCPwyjuUitqbsiwIdkDDr2Lyw3W/vhYA1n8XlUXgyJKUiTHkSY7WImr/K0P5+JOMfvZf0f5v
      f5pk/35kIiAIsAMyd5WJXEZnbZSKy0UpKhDpbvKN8SWyZkMLEeWExpQEPFqniBCo1p4mNQP8
      wkm8bn7F26Bf73XzHGCyjQ4BvfokVT6FnNkPq2fIQknR2Q+NXrzCer/bshJC1omKMo7og0Ar
      UbcgY9K2dYFms7Hb5xa7hOWAG16H4RpeaBrTM4TGIlU1QciUJ9fX2d9WXBsbZppdZpMKXV4g
      pDOo6jom3Y+VHZIki+HZpiTIiHAxxrLzP/4j3DPPxANViu7f/7uki/OEEGG5qna2gYg5ByL6
      nJVO2N5cpyeuEFq34UW8m0ip6ztk7GpRZxEHoVECBDElefBz/w7z8EMwniBaLdI33Efnz7wL
      awy5OY9N9yFrztGNP0IGlEzq/GFL4QYokQCBRDbxzhOCBRmQQcDaObQrGHWWaU0vYWx46QT4
      MuvmlEhfYasR7eCQeY+wdZnMTSi6+xCt2V0yQexJx1t2IIrAooQOEi2jodvHK7MUCiEMZTkh
      TePgSBLben77MmEyQGlNOr2MTVqIevqcZDknZmfJ7LNMN0us1iRiEluwraN4BMGX6HQG4QYE
      U6HGGwThUTrg5QzNv/gXqH7/05S/+kE6f+uvo6Y6cWIR3C5VLV4D4mZT6TrW1JR0enMMr2/R
      Kq4S8v1xyHUjOUcAwiN1WkcdlUTdk4Zyk+Tuu+JS5ROfIHnda9EnTsR2ZvD4MuBC9AAoGSFf
      zhmsN3jh0V5ggyGROQGHJCGEKH8wFEgD4voltKsYdRdQnQ6FHSLCVx8z8vVWt+wCybIEnWHH
      fRrVJkU2VQeLBZzzCCnQOvbBfQgIFNZ7wJMoXaPTo8E8eI/QkdzcaLQxZVGfNOC3rxCKIbIx
      RTa7j9JaVB31KaTEViVaCYzYSyauklRXsbJHSA9EJ1djP9e3VmiETXqijzUWFQwmncEnOT60
      aC02CSdPEEYj1HQLufMMZMd2+UY3MCOylhwE77F1+rqS4PQsIqySJCnehxoWpuIaXApsVZCk
      eT3vcHhXkvhNWq+8g6LXw50+TX7/m2juW0YIKIyhrQJWRUsjUhFE/HBrnVL5Mc5ZGrpD6caE
      4El1tJZaX+HNBN3fQAbPaGoJmu04SATE11lS/NdC3bwHGG2TbJwlbXYos1nEeAM9exgXYm5V
      jE5SOB9iYrmMkalSqTrxXdRr/wqEBO/RSVInrkfCnLMGFSxi/SnGuks+e4DSOBIdg/kQov5w
      1ZPRJMGXAzL7LNaBbx3Hhbg2/s0zv85Cew+vWH4V2JJkuILvLaOzRtTHBPAhRMNOOaKxfY6y
      d4iQd2vQbBaBXzraO6VUketfjHf3M2X/Enmzg8zmUCo6sHyIOvy4x4lXaKUS/HgFaVYoshNA
      GknXSUKio/a/HKyg3SaudQIhAlIpjCvBBbK0gfHRhwFRlxUI6FovVE12yLcvE6SimD6AyPTu
      YwFkaNBtf+0Npb6W66Y7wHDoIDtCphRb18dMTS2ji6iZTxONsY7+zqCmRkCWxj5+p50hhGdj
      Y0Q3maAmkdsphMCmDXz3IGVpaTYlfrxNOrrMiJx0Zh+lMTzbv8KxhaM4Z9Fphq83zxABsGF8
      jULuQSce7a6zPpH8wiPv5ezGaaRUPHL1Ib775Lvo2RLnHZNqBwVgFLY4AAAgAElEQVQk5LW3
      IcY30Zol2b5A0dmP7szhnUXpeIKq5xlKfPAkKoHg6GYFriooRRud5EhRd8tshVK61jFFho/w
      YzyRhypEqLfNMYrVTHbI3BV887aosxKyNh6BQNb9/rgkc2FAqi3eJ4BChAmN4RpeSIrpJUij
      ceml+pPVTVqgbreF0ppJ6UjTOOkcDMbs7IwJAUZjQ7vdwhhDUVTs7IwwxlCWBmsDZWkQ534D
      /r8fRv3qjyA/8G7Cx/8B1jqc94zHJWmisCrHtxYYVyXXx5v858ffx2AyorSWsihrvXvcbBaT
      MSJYTEgJ6QJWzzHdnOHP3Pk98YMqE77j9u+iGcAkbYSKG9IgfG10j2rKEDzjbA6fdsjKa4Rq
      Ui9bHFU12VVU2hqHDuBtgZNtxsziXMAH4jJRyt2UHKlSBKKWalQULiOIDCETVHJj/R5w3lM1
      7sSEDCk11sWQwRgveAN92Af6aCUZ2wZBdtDJLK5foRWUs8uQ5ruaw/hztXnp6wCR8rVWN/sB
      JHQ7Gd5AYRVKJUhBTSELdNspo3HJ1FSbsjTxJCkrkiQuHfbtm8dcu/kXpamuh1ICyjHGBZQU
      fPzSJ/j1p97PoBzwjz/+P/A99/wQx+aOQr3R1EmKHD2DDQlZo1V7ljVaBNZHa/yV1/8thtWA
      q7/6H+HCNq2f+DESFJgU//R5zOwc6dx0vRmXmJBS9Q6QTa6SlCv4/GTU5ugUZ0p83YIUgSgF
      T9tIPU1aWdbWtllYaDOemN1kFmMsRWmYm+0xGI5pZwvIzDPYmQCQ5ylFaWm3NIOxQmDxwaN1
      3E/MTDdACLSKm+mq6sYUGCdIlcRjMWaMnmwy0RlZCpVzMQVHpQgkQYCUAudfuiN8uXXTHcB7
      i5tsk208Fj8k2qGVp9eJ5m0pAp1WisDSaigkFXmm0FqiRDRs3PJtCJY8Ba3AhgQZLEm5yv0H
      7mOps0wjafC6/fdxfP4YANvDgsHEYIptdLUG2VyMZCIuT7wP3L14D8dnbuPUE32WLvVxKyuU
      H/445ZVrUFSM/td/g3nwISCy/W2tqhRSs+O7hPEYUe4g6gFUDM8rcDYmX9Zx83jvSNOEqakO
      q6ubDIZj+jsjjImpjmmi8SGQpZphoUF1mUzi1DdOfhO2tkd0WhnOO7I0ob+9Ey2k9aRaSBWX
      QEKSpjlZmpHqhEw2KMdRi1W1pyldgpaOTJYo70hlIxppfPrSHeCPUTfdAaRUWBXf+GSyhWnN
      kTZ7CCFw3lNUlkRJBGDG/ahi9gFTCkga+GKAuPg7f+C3ZFHMRUAiSDqzWCVx4zUmZsIr9r6G
      H37lX+DRa5/HGMf7P/U0H3rwIlmq+d5vPM7rjh9EJFP1OptaGWljwqTxmM98BndtFaqK6pOf
      IvT72KfPQ1FQfuhD2KfO0PnLP44IDp2kGFuhml1MlaHWzyL23o2QOqJRtIxt0V02kseO1tAJ
      WDPF7GyPoihpNnPyPEW4MZKADyOMl0xPtYHA0tIMUUc4IkkV7fY0w+GEmekOBE++dxbv6n1H
      fZJ570mS+EF23u9aTpNQxuPROUiJFTlYS5aMCbTwXsVu2ddoQszXct1CChGFWD6AxCOLPi5v
      xWwAZ0kTHduHVQG/9pcJk+v1z0G4/+9BexE2zz73fFITXvkebsxPb1xpyboYEnKpeOPSKZJc
      8+ZDr+DM1R3e/8mz+ACDieEXPvwUpw68nq60SCBJ8jgkI54IXks6f+OvMf7ABzGf/Rztv/PT
      +JVrICXV+jpyfgF1+BBCxr67DwEfJFp4fHuJrH+BYmcd1ZnHeYdUMXVRKwnFKsptoJMpsBOm
      kzEuPYBWKZNiwnBQ0Mol41Gf6fQ6/XIPIxHnIMEZXIAuz+KTI0ihaDc1PlhC8CRKovM0rvuJ
      Pl+p1C7nU0qBrxt03loCkOk2KEllJ6TaEEIPkLhQ4XwBL80Bvuy6BRvUo0VU0lkfED5KBpy1
      IARJkmJN7J1Tbn9xHpYzMUDuDzynSNv1iKyeFPuADwKZNsmUoxgNScQ2FYphMcXzl7KTymKc
      R8iE4D1lWcSTsd5YaqUISpHe+xqSI4cQCeSnjqIP7Meefork3tfQvP8+8BE4VRmH1ooQJFam
      VEGizACd7EMhsKYAH/DBoUKBTfcRVAeVa6RZQxUX8Gqeri4wtk9qShIdCEHRaxgSuYYIAdw2
      yOh3KKsdnFAo3SDYijRvURQjMLXcvMYgapXsLmOEAOvHcRIcWWM4X6J1TiYdzml0nelcuXHs
      cr2Yn4z/Suqm18z6EjPZjMsAAc5XOMyuW8e52Ju+FZFYCsktl6H1VV9IQZIqlFLkWY6Wkmps
      EFUD07gN0jlOHJjhxL7pGz/GG+/ax/xUO27GlaZ48im2/pd/jh0XdU/eo7UmO7CX9rF5ksHl
      GMyd5yR/9b9Bvfo1NZUiQSpFs9lAqZQ0zWm12ujZg2gC1hSYcozWGp1oAhKjFwm6V2uEUqya
      A9kmdRsgIM1bhPYxRPMg6JRMjBAqjWF1rUOE5iFKtYfErjHYuobAk+aNek+R1/IHFRlAQtYG
      mwiRsqZC+pTKF1gzIQDGFxhX4IPFC4EN0RMcESmy7ia9VF9O3YKkJMBM8LXgywePJw5nUhW1
      PFLIL2Ly3yjnA0G1UMffsZsig6iXO6LBuHLkXlC6gBKBRGrMY6cZ/9x76f2jf0DVWECnmr/4
      rlfz9OUNGlnCwaVZdipFK4Xq9JOYLzyKffwJqs9/AX/4EM39+3ZNJSFtkoyvYwfXUa05JkKR
      eDCDglYrZzgck6Upm5s7TE13qMqKRqPDSGhkvyRNEwoTEY+tpiL4QPAR1XKDiG30HFLuQSiN
      VEns4yc5FXmcFoeA1x5dT8TLyRgpW/Rml9na7tPrTeGcwYc4uTXVBJ1kSKHqVqmFAMZVcT9i
      Dc1iG6NzdJojg0IIhw8K5wsSkaFlDiLg/UsnwJdbN02Cq3KMHa+RbV0mIHBSI5Zux4QSJVNk
      0LjaLxDWnsDXwCYfwE/fRpXMMNXS7EwsqZZMKgcIrBdU1pMoQa+VMBwXJL/1a9gnHsc9fR79
      sntI772X0R2vwrjI2AkErIsnViId/p/9z7hz53YPPvu2byV/82uRNjIwQ31yJqEitOdYG6Uk
      iY4OLSmiyRxBlqcMRwWNLKbG5HlGVRmMjTOBoqjYvzyFqDPRpFSYqoQaghWn3o40a9Svm6mX
      iKB1siv4QwX8ZANlh9A6ik5zhsMBWaJqCQY1X0ntkh+oCdUei6FC7WzRGK0x7O1DNNuoUMW7
      hEwIBJRIUELH6byFdvvWyJCX6tZ1iz2Ag2aXiV8k76+SYhmNd0jbUyihMVVR8xu38HvvRCet
      yAP1AfBYB4oNppo5xndoZbULSsnY+xeBygXauaIYDQmj+sPb3yEUBb080NAGKS3oNoOJo7Se
      Xq4xP/4eys9+juJ9/4H23/3vUDMziC/8n4Qnf/m54z/0Zswbfor/n703ibUtO+/7ft/q9t6n
      u/d11RerSIqUSJEyJCqRZEmWw0BKgsRBZChwAsSZBIicDIKMAgTwLMkkQAaZZaAggBHAATQK
      AiMxBMWSZVtMFMuUZHVUsVxksbrX3O40u1nNl8Ha97xXfE8iqxElWvUViIf3eM8+5+6z1tpf
      828kj3Q20piIO1mTsHUS3QV2+57nn73J1dWexaLFG6WTTF609ENks1lWKEac8KGpflzOzWrM
      BdUqHIYIJWfG4YDzTVV3ngFxYgxFMyUbhBkElyIlRST4uQ6Z1Z1zwtqm/r3UVrQLVR3aHs6Y
      TItrTimasJKIdHOzwmHUQoGYD4j588nO+vMcj7dBxWGNZVhuGOyCxcVrmP6MqfO4WaRJ9QLV
      Fh9aSp6YplooFwV2b1HSgaI1Lx26m5h2RZ6RkNtR2U2CNYL/2Z+j+cRv0v/C/8zyP/9buNMN
      4zSRdl+hWd1mSrBuWpa+EKcBf7Ikf+p7aP6Nn8E9dQfbBnLJyAxPhqqcIKFDtGHlJ9z+TfT+
      G7jnPo+ffcJWC4dQWHQWZ5U89bRnf0RZPs1q/TQuNEzDgPVV9zT4qiDtfKgSKDmRc6Rplhjr
      cL6tqZI1x85NLH1l1ZUBbDPn9tfT9UjXtZQ0F/LOo9TBm5FK6MkxQX+gEWW4+RLiDJomshGK
      KKKC0R7nEjFajAQ+KoPfezyhBqjQYG8a/HJDunoLmyasWtCrCjMuDdZtiFnx5hFMSimUX/3v
      0Hd++2Et/IWfx/zQfzwX1RakHFOmMQvNZz7N+m//V9jNGmugCYZDehmVBjuDzaoxdd1Q3cdf
      onnphZkmWJ7IvbUzhkd8YHKfxN79XfTeK5inPj2bAFpUM0V1Ho4ZJjWYcQubZ8kp4nzN8YfD
      lsRc2+c6+DKmMsqmcU/TrnDOMY0R1TqNHdMAJiKaWcgl0b6A8w3T1GOdI46ppj6zzakwyx1q
      xQwF15E10ly9zWgD4jtEE43PlLwmYFGNWDtSyh1ynmialqIfwiBMC7/5pX/I+V74wk/8GKft
      t5JaLPz2P/m/0ae/n7/0ye+sA3w8nPHLv/L/cPrsS/zoD372W/58f/4mv/ql3+Kplz/DD33m
      ZeAJG2DMezqzomhhKHtMWNKlC/qyQ+hI2lS9ehGM1L5+RUbuMFao9JeHUaitVYCswpQfUv4A
      GneOf2FJ8bXQdM4TWhjGTPCpEmusmxlc9YrGWoomYpzhxOaRX8PY6lkwSwkaA+bOp7D3/pD9
      7gLfrmZEq6HrAmkasaHBPv0pzMXrFB8Yhz2h6ZiGPRXjb7HGzHwBf+QaV1i3Vg51KagIxiSM
      TRg87LaU5HGbG4gRmqYjaaxSMFMkBH+8W0VL3fBjz/7yPt1wjtXEsHoKVzLeWUq5ccQAiTkw
      ZoczFehXJKLlg6tDp+1dXj84XmgN56//Pr/6lQuef2HDJ08NX78ovPrGfZ5//nm2b78Ky2f4
      4k/8MB9/+QX+2d1vrcf/Ycfvfekf8eJnv8DFgzO+9Ku/hD+9QwinmLTj4u4bPNhHPvu9L/MH
      r7zG93z+x/j0C8/wuU++w+/de6he9zgWSHw9bYtgZSSYA6QMh4i/+Qw5xnpqybV6qIKOOK8M
      /ZOo4BCLxVrDfshMWY8bRIGsCS+eMRWctThX0wxClf9umnpNM7POQCuC0zqMteS/9DfhMz97
      VLPAdxVnb6tUl7WOGEecEVrvyDPEQUWOQlM5jVWhYtoT9+eE7qSe8qpYa3G+Pm3q1LbUWcf8
      S2gpaC742SWnlFLvnfWQM4wJTRETPCogKjShYbc/MKVEGwLOOco0Ys5fpdNc7WjbDUOzplne
      wFhPyRHnPUUTqFCKw9qGlBTvPbmMCB9cOtw0C8bzM7i54BtvXfLsp36Y/o1/yjcuD9zPG06f
      fYnXX/1tlss7jA/eJmthv9ux28/6seZDeAp9m3Hj1gmv3D9w9dartFj+6o+9zD/4lX9OiXt0
      6nnmxPCl33mNH/vh7+GVr/4L7pRv8Gu/d8Zf+5kfP17jCfLoVeZPc8HqFjk/Z8qCyROyfmoe
      QEGeC8KS01y4GRQHX/1l6M+q4Kvx8NwXmG59P7uxMsiMXENsFERY8KDij+zpkV54TQyfptqM
      dbbOF6YsTLEQnOUwZfohsdpskGaJaU+wixPcfMKXnCg5VnFeLZjtW4x4XHdSKYil4vivIRo2
      dJhpR54GtFnV1qS9dl/Js0vLbE2kZcYNVeEv5wNx6gmhwTp37OsX4zD7e5T+ElndnplxVfiq
      suYy45hBM/bBKxhjmU5eQG68xBsXUKSpqtbbHmcdxsAwRkQ8RVtKNlxdDeRsCD6Qs9I27Qda
      VOIaXnz6hK0GPvt938ftGxuevrlhcKfc9gNfOyv89Bd/ipOQeeGTn+Gk87zx9hlN8Ny+fRv7
      HdwAm6c/hhzu8syLn+aTn3yZ5fIErwPPvvQJzt54jVuf+iG++COf5803z/ihL/wARgyikWIa
      bmwqdfRxTvD+CjEZQ4S0x91/kwMNS0bS7e9FQ0vJZZZIYfb+qsoQOWfy4QE6O54bY8lmSViu
      yFlR47BiOAyJqdRJ84l+jdaBLj/J/jDx5a/exVvD5z5+s5LnrUWMY0yF3ZABZdUY9qOybgqN
      m/EyPsyiVLG6kTh3JOBMw57lxSsM3R3M+qkZhz/imwUl11Or5An34I9IajBPf28lt8xEmWnq
      QSt5peJ08rGWuJbYy6luhus2ZowTIbTEq7v4i9eIizv4Ox8HqPRF7KzvX8i7HYv+LcaTl5Au
      EGzHK199h7bxtF3LOEaWi4bdrpJ0vLMzaM6ScqHvK+Du9HT551ao6s9rPAEL5NjtMqvlgqu9
      ZblZkophawpEA6VC2lSZPcEi3hv6YWS9WrDLKxbrW+QC02FiGhILU7AGuhbeuXvB5mTFylv2
      +57cfIyrnJHDxP/wi7/B73/9DIAf//7n+Pl/5wdogmM/FvZHeV8hFTjtwJmKpJzSrLAmMmPj
      q6BsKvlozoGxFOMRhVLiEVmaZz6AdQ5cwOVIngvdcdiT5oWdcybFaXbQ4dgOzbNVU8kZnGdK
      lWNQU0nBrG8wDZc0/T3Gyw63uYPDkw4XxGlAXWDR32OyC8bsYB9xy4ZbtzZVVADBl8I0Rdbr
      jnGsIsClFLou8ODBFd67o7TKR/He4nFSfKqDoGlM+OA430emaWS9XpJy5pmn17z66tusZ9fI
      zXrB+fmWO3dOKwR4P+F9QFHatmEYI4fDQE6Z5XOn3Ly54f79y/kLbNjvBm7eXPK7r949Ln6A
      3/jDt/nZn/geXnrmlGXj6KdCzErrhaWrRhEiht1YOExw0uTjcMk6N+ts1qeDs5YSJ1hf0x89
      SjWxrkV1LZgRSx63XJNTfGiZxgPx2orUumPdUEo+KhHnNNW0i0LUASkG72oqYsWjN19gemuL
      uXid2F/ipx2tVky/qDLZBjbP0rmWYRyZYuLGyeJYzOdsENmjpbBYtRQitjiy9Ny6tUBcQdRQ
      8kdw6PcaTyTFd63Dh8Dl5Z5bN9bVGV0zaGG/67nz1A1A8d7grHD79obd7oAPgdWqZb1sKppz
      d+D0ZMVhGFksOnajUlKh7VpCG4jjyHK1wPnA6brFPkLqaIOjC2424fasWsPZLjFE0Cx0jWHK
      sB8L666qqYmYyr4qkXRt5GcMaXsfq6UWk1q7Nj50TONQYdBzPZKmsUKb54lszfEDudQJ8/Xm
      OTrimMrJTWXC4Iil6taLFYpUf4E0Dsjl63gy1kAaryjNCXl5m0EyQiaEkzrEKoXloqXve/Yp
      YkOhFIO1W0pek7RQdEQlg8xyKiVjFTIT8J11h/mXIZ5Aij9HTe10WKrwrQJy9hpdumJrTzG3
      XkJLIkkmiMWIZUrKPhpurcLc56+Gz2PMbIfMGOvp/GgHqHW12PXO4CXx9//p6/wfv/4q3hr+
      xr/2vfzk55+vHZKcmGLk7AA60wehpjnBwipU7PyUDaIHmlAopU6oiyrp/tfoJBFvfuIIbQDF
      GFf/PmPyNfb4B39EtAv8c59lHA7HTYQ+pB46H5jSgKaCbxr6uMXTMumh9ve3V5j+HFNyBdqJ
      RYG0uEVY38H6llyU830PAmtfB3PGmFpXKBz6fj6Mdoyxxbv6RBCEibHyMLLQuAWRQ/19PiLF
      v+d4ojaoVYeogNTcWEU5rG7hz65oW0s2Qi7g1OPDgRQ9SMsq5OrXJoKTimf31rDp4G7MyAyK
      hurr1n7jVzC/+78d3/pnNi/wUz//XyNUyIQxhpTScdGKKEarulxBcKawCoBYijj6mFk1AdXt
      XA/Up0ITPIp/qBM/82drN0eOOJxiPMPqORb7N9Dtm0i4ybUFKdTCeppGTCkUMkXTbGYNhYQj
      UM7eohvPSaYh+o5Du8G2CzDVLmmSiVabOjCLFmvAtoIRPwt01TZtEwxFL+kPHb4LdYBoIeUR
      kUpMthJQiZW8ZFq0fHgOin9R4rENkE3Cuw5nAgikXEhlIPgFijCqw5Ry7JLUbkhLd12ESW1x
      Xi/0VCr311tTLYd4+BSQ/gFy93cevnnsWXYeSmacYkVaGmGft+S0oKjlpBH2U6GoJWW4HGpP
      vkq5Qx89ywDWFIxtKtuqv0RDFeB1LtTB3LwZjDkj5yXQVDyPf4pBM+3lmxB63O2P166PQsmV
      sWVmh0Z1FVyH1EGWicoy7hiWz+FPn8FJIef9LLtosLYS4w8pc9XXor5obTyoJlK6AJ2A2u06
      cuiy1BPDVNC/IJA9wQemsseKJ2uED2MS/BcsHgOPWPFzbktVitaerJFy+U5VglvdmtOB+gXm
      tAKqr1WdI1SZj6NdDvULW7f1dFoG88ik+HFI9bVY1LXEOUVZ+DUGR+OE4AVv6zChYEgKi2A5
      XTpurDwLP2JNQcTXhWosxbVYZzG+w1iLETP/bwJxWLusg6v59DXrp5namzTjGSUNWNfgfDgK
      UKlxeLumcae1HWkXSGnQOFB8i9k8i4rF2wZvWqxxpOxQhXFyXBwyWaH19Sm17w/AfVQTpXTE
      uKTkAOJnZYnAoVc0O6yusRLwtj4VTFky9qZKKspHWKD3Gk9Eg+YyESlHTRtyohnuE8MG68MM
      MbCkNMHsDA9VzS0X5Xw7MaU68bVGWDSGVevYDlX86jAVjPwxCgZiuLracuNkNWPwHdZ6LsvE
      wqWaKlSxZoA5L1eWjSPGAbE7ctngfYUpCIK99RIXMWD7EXENKZtZRcEhsqIUaIOhn4TGGYZU
      WHVPk7ubXIwtPtUnwKp1HJIljQlnDRcHuLW6ycUhs2wsZbXgPD2DRvBFSIMS3BJrDDn3bKfZ
      zKJ+cjaLwGLqce6Kw7im0BCcEEL1I4aKNlVVttsDfe9omkApgnWJtjPsD5nFomN/NRA+qoHf
      czyRExzLWKHPOrv6HfZYLZTNMzP0OSOmYEzB++pTBdUn6/5lz5irc7lSU6CrPlO0Gk1fHma/
      KxX0qc9RvvDzRxqgdjcY+oFF11TbINdQSmKIGWuENtQ8ftF6smb6qaoqXPWZMSlBEq0XokRS
      Snjb4sRjfEeeoLWJiyFhZj3T1ltEYD8l+imzah33rkZOl56Ddni7xKH0U6VxhllAyzuwxrDp
      HNs+E5xweUg03hBzoRToR8VZIWU46aqNkhapzGiBzgmaz/AuoXpKaJRY9uzHDtt5DuOSZXiA
      s55xTDjnaqEfY51xDIXlYkHJA2cPLghNYBU+2BT4L2I8vgG01IWrNZXp3IbcWnR3lzweyMbX
      3nTqqYyx+XUUcilErV/wda5/DdHZXg+y5kEVquitT+Of/T40F0TqRNmLHsFmpdS0aj9E1q2j
      lMrKskY5WTj6qQrSorBuHcynZi22C6UkpnzASOHmouMwBG6vLEnrSV+FqArBerwzvH0xcmcT
      EAqNVSDhNLNeCIlA4yvceswWI5lVY1g0NZ2KWTlpSpV4DB4xwhSV1lv2w0QpSnCGRahPHy97
      RMDap+YaIpF0pA2FbZ9YtY6cN3SLHdN4ws2bK6YYcdZUPwYpaEmcnrSk7Ajek8tDbOw4jhwO
      hz+tdfMvTTy2AWqnpGI6nalUvWQDUzihvfo6sV8itz6OWI+YHWjF2+QcKWli7QtXk+Fk4Wm9
      YYyFqz5RFKxRFo3lMBaszOp+pczOLDoD3sqxLQkCtqYnMWXCTCKZxjwbel8D8mp9eC0nolIQ
      DOQJYeKqb1lTCBdfgfYEs7xNVjNvRkNrLaXAc6e2AuNUETUoBX//96sG6p1PoaUllRGoSNSC
      J5uIYLjhPO7uVzlkz3DjeYJPNfePC0qZ+dWa2Y0Zi3BztUe5hZhraMScv8tI13R1c8z4HmMy
      kDns92w2C4wxREa8achprO3m8m516KZpaJqPVCK+VTy2Abw0ZKZa8OUqly5isHc+wbS9h716
      E3P/FfannwHZEIJUnVCtp67zwloKlrq4lq3gXalpjBtwJqDqyQVC49Gi9aSHWRd/OkKNU664
      +VXjiSmCFooqsSjjMMIj6MerPrHwUtunRXGSyCTODysWbVMNOdbPIFdvIKs7FbU5D7eOBXuZ
      n1gVRgoU8vo5/P4t+vM38Xc+RizjjOarAL3SD9jdOTYd2Jolu+4FfKnt3mGCnEfGaOm80DQD
      qOI0U7TWUn3eUkxt7AJz6rhHWIMaclkSfM84gLWCSqVPGq02qsY5YhnneuejeK/x+BNA9ziW
      aKnKD5lEcG3F0G+eZgpLZH+fYZxQhH7IDOOOrvHkUmYTB0g5c3KyYLlwGCl4N1EoFE003jFM
      MqMm57x45gwYEdLsTmmtp8RIsvEoqW6ALlQs0pDLkQTirdRJb+kwEskq7KYl3gVWTS3UxTX4
      PDJOB4ptcM5gjGccr2B/himQ/YKwvomgZM1gEtkYmjyShhF78TZOa4sg+IYw7UniuWqf5+BO
      KRjGqIyxe3hPgbapzi5BEgUY1dE6S5zl2R82juuTrxBr+xOLaovIga5dkFOmzAjXSUcEeZeM
      zEfx3uIJDApfob/OkpjIJZNLQkoFflnfIjc/xjJVgkicJjZLRxcs233GLVua4Nnve7quIetA
      MG2tKbQOn1rn2PaJVPSYt5ei5Jwps5JykYKUOhm11h3lyEvJUAoxVmUEqEvmsk+YQQhuwUnn
      OEwjMQknCzNr7xjEd+R2jSsT2q6rBtC4p929jeYJ/IJmd8YohSF4QkkYE8imxeYD/vw1jPNM
      3bOYEikogzuhtDfYjUdEBVWKseqsBmewRhH1eDlQCCQBI3buCL179dYFXdCsJKlqHDYv8X7E
      5MwwFHqF0BicBKY8kYvFu/KkrvJH8S3iCRtgRKQqwQVaSrbz1DNiTCWsINUWwJmJYEbidg+X
      Z9wycDWsyLefZ3PiKDogGKKOlZxy3ZsXQ+trvu9M1eBP975CfvAVYJ4hLO9QXvwRrJUKMc51
      9jBmQyoGR8aSUXHk2bVFFYZYW4hTqgJd+6F2oGKGUPasKJirN9Dd28g0YI1hMg3TzRdQWVAu
      73Gye4OAwUhlsRnrsGVkJ0v24XlyCWQVFkGIRcjx4cozUkrWk78AACAASURBVGaLKMPp0tE4
      Q8kTqlfEYvB+Rc49SmHM+yd8JQavHmM91lim0jPqHpIQzB7vlqSS6A/16ZkRRBJFjrO9j+I9
      xBPmANc96ErXC86TlTkxVvp8hcVVyh8jxrXo5gZ3d7dp0hW3p29wuFSmm09XA7x3ZaYCVPyN
      kzxj7FtKmZCv/Rry5f/l+FP63A+jL/5I7UjF6SjUZYxhHQwPdtC6SNcIl4MQ88PB25QUI/X0
      LapcHSa68R5dvIt4j/qGg91gQmFyHaZdowX6SVndfpl+ulXNwZ2nxJEmH5j6zEXzPIX2eNKO
      uXqfXf9D1ySaENn1DcFFrg6FZci0/oqiy7lkeTclVOZ5LygUwWplunnvj8SaMe9RIGaPdwcM
      N7ApMcZCsAG1ESV/9AR4H/F4DQA8OiA2ImSt7VFrPBZHzucgGdXAITbsp4SxjtMbTzPe39EO
      V+zHU0z4JpmOUgFlSRJGdO7HP+QMf3NUCmJt7fnQEKeRLhhymUW4vEPQWpMeP3v98+bKE5wh
      DTvS5WssTSQtbyPpwNTdwrY3KuXRGA5TQihVM9QKGjpGCSy6Fm8Mh7N3WHKOi1sm23DSQsay
      HSpjbd0aCtcYHWqHyycaM9K4SEwLRBokRpJUF5pC1RGiUA8UU/UPoww1PcpKLANG6lckIhRj
      yGpw9kCyhs4EVCOYiJGM8hEf4L3GE+HQsUwYdbU1J9cSH1oL49xXXXqzYTcUdlOicbBoHEkP
      pMUN2ukShgGCQ7BVuKnM8n3WzDTDqt6Q44h3gfEJH05EyI/ib4zjfFfVFhqjxFLFs6wU4iOb
      VgTOtgPL+ICTeL9ef/NxxAXK3d+jnL5MKkLjHaVUhtX5LmIMXO4nBFh2LVd9RqSw0w2qLbfS
      O1ziCbaaiBgyzipWbHWMNIY8zxa8RsQUDtMaZ0GYUFewWjkJlqZ2uspAKQZxSpJxnglkJq3+
      Alnju+5HwuMpeBkQcyCrQVWIpQoVfBTvLZ4wB4CUJ4qbZUnmYZQzAckRYyHlgAC7MXNj6RBz
      IBjHWAr4+sQIaSCxri3NYhAMfpYBSTFRSgSZ8UM5oc0JbF58+EEWT5FSQtAjzRGUhatT0Qf7
      UsddmnHWYOfDLxdFpi034ts0TJzLCXb9LMU0dFdfJxYYpsyEY0iZKemcxkAqlf9/Y+VRhcNY
      6kREDOnkJfzhVU7CliSgeceqdfQ9TMZWBC3g1bFY9RRtycnRuPrUK1IoWsgFDqPH24x3CWc8
      YiAT3y2n8U2hqpVsjyOpIz76wyKI4SMw3PuIxzbAFB1tM1JyWwVlZ+TjFHtaO5HSpoLkqF8s
      WuVKBt3WXNYaknHYNKJltiGFmtPOYeuReNQHAjA/8HOUz/8sYCpyWCqcwrmGa/shVSGLZzdA
      KoIxBZVE6xussehwgT3cY82eK1nxwL9IcS0ywa0VuOGC7BcM2jClR1uP84ecYcYX+1Qn1UDX
      WKzAwrcMO4M5u2K3uYNaQ0iJZdszxRPUKFYSIj199CCZQsaqpZiqTF2yZ5gqUtW6ev3LwdaW
      a3EEl1l3QtLxkY9VF77XthrqlZ5IfIgK/Sg+UDyeAjlLShYxE0qHYOjcmiFfIuKPE1gpFeiw
      myacG/B4vARUFA1LTDxgTZhBvRmdNxJUnoAxOis2VD6vdYZU9gRZElxVYquy7HWjWOc5jJF+
      UkTqVFhEyfGAKSPt7h4hbhlNx5v+YyRfNTJF4NbK03jDZDsmt0IRGv8wZZpSxfMsmkqlvNwn
      FiEzZYO3wtLXhVhOnkfOXmWzfZXDjRcQe80Pzji7p6ghlgaMkJKt6nghomoYhobgC2BIuaYt
      KVclOO8LJEMuQiwHkGsvejDZ4Ew7u8gIU6qpEQp6NOH7KN5vPMYI64ctlAPGjMAN7OxdldMZ
      pXiMaSma8b7hYh8JfiJrxKmnmIjFwxRpz14hr5/hqw+qqNSzz96i70emKbFctsSUawHaDywX
      lSG1WEFjG6Yc6wbTSkJJeQIRiiRkEky8ZKc3EFFO7IihYoeiGnLYkNTyqHi1s0LMBUpi6Ct5
      P5eKXQreYZ2vebubB2yxEKwyTondkLm1DpSSEAvD9i6Ly7coGIZbLxBCrSH6sRA1MEZHGxJT
      dIjMBH1TmCaPswGMw1mh9WYu4AvBwdm+wjm6kBGJiFhEOZLrmZ+IUx5BEyoWLROpXLtMgmj7
      ESPsPcZjG2Ac9yCZnK4wYjFmPU9pL4AbFaGpdQJbAVyHyiLDkyVW/IxpkatzLIV76eRIJcwp
      03VVJ9P7qpHpnaPvB7z3rNcB72qXJ8WIEZ1tkRKRER0nuou3cIsTvjZuoGhFSc5+vj74ow9Y
      SQXjDKvlgn6o84jFasnZ/bMKKZ47Js64I6QahGnKGCuslwsaPxuDSyGTKGZGsvYHFhdvUcQy
      3XppJt5AlIld32KNUoqQ56ekFSUrLJrAdqzdr2VrmVKVk3lq43jt3si1vYK3BmvqXKP1FWi3
      GxOdt8Q8b9SitEHw9uKYyn1EiXzv8URKZKSO2EUz6Blg0bLEWMMUp5qLpkQxeyTXiaSYilOx
      0lAohBvPgSq3+h3SP8CKIRlBm9uY0GKNoe2UQqFpK3MrsWeah0peAs5VxeSYFJ32dBdvo7bl
      qnmWtastzGEYadqG7XaHMYblcoGWQs7V2O5wGGaFt5qCWW9x3sKsy1PVnC0yyxWmNHJzvaYf
      BoK/VnEWUq7oTu8y0W7YrQsnV2+x73vsqoECw9SgKkypnu7XkbWaC4ooq9YhUjs6RxEpVZZN
      JfXc30aWrWOYqnZpnwpunmksmvq5p1SIx6nzR/FB4rEnwPn5OatVS0oDjd8So8W6m6D1/5eZ
      fG5sz7UybZZYfcUodHaNfUSrU1WZph169Q5+uKyTV7V1c8lMWRGPaCRjSLaS6p1fIL6rcwIE
      d/4aWMd+8z3ss+fGRrFI1cd3gWGYqgUryjAmshqWjWCMO0Kx+ylz01wRpiv09GPIPNUWIKZC
      KYVhjGA9qWSMRoIVkjrGWDBuQBD60RPMxOnlK1y5W0yLpzBaaL1hP8kMWsvzPTMgdTC3XEQ6
      32HEExOVP1BGch6wxhOj0DYNWWsKlLPHyDDPXN49QEMrXiiV6VgHfPQEeO/x2BMgBM9h39ME
      R843Ebmk5AnvF9UoIivWZHLOGLUkM80j+YQ5TjVrZM3E0iPO0Nz5JGkamMYe9vcRnRCdYcvW
      MxXBqOJKxokih3tH2XOxjmgDw8kn2GdHGwo5ThjTIA60JJpguNxHxlSfGMYorauqy8F5grPs
      h8jZoDw93COKJ9x8caZWgpZIjIk+GeJY82onSjaFPleGgVNHzJWONubAJA0+9wzFkBFcKZy0
      UEwBKex6y3IxViXsMXC1C+hixNmK0x+iPfb5c04UDH08PORSiCE+gvGHh52f6/v8nSiCS1G2
      /cgwVTLRqgu0s+/zd3s87g8wy3OIcaixUCzoiFJP41zKjONv2MdMCAEkAlIdZGarn6oaXUnj
      3nT1pDKuSn3f/BhKJlGx9EYtWQZULK1dk+KEFWC2Ds3TgFusiZOw9qkiP01bTbSlDtaGWGiD
      pY86D5MgFkcwCdVITLXILH5FnELV7Dx9FmOq2FWKiSFKlV2cFJGCp6rQAShCzBZrSu3f24KO
      li4dGFzt70eFPCmbVshkFg2IKWgpeBdoTMaYeDwi8nx/atS2Lo/8i2r5Yxf4n/bCV1X+xVsX
      /OqXX+PLr7zNg6ueKdWuVRccLz51wo9+/wv8xOc/xmb5neMdjL/xC6Q//D8/tOs9tgGGEgiN
      B52qA6OsQZRM1a4JHkqKRFngQ9Xzr0nKiGquHSGp/X9nPEYNUx7rFFkB44hprJh2cZW5pQlH
      i5GqASRGcL7S+xRFbQWHrUKqZHfr6iZllicvyn7MxFwX4nVcHBJPbQJSJkqJs8S4IstbuN1b
      xP05sr5dzemAZYCk1eXG+0zjIE7vhlkANCHOuCRFtLBsR5CqExpjHQg21oOt3SvrHGIzhci7
      49Gr6iP/po/8+e2HfkiDsLNtz9/5v36Lf/Q7Xyc+QW6xHxNn24Hf+uo7/OKv/B5/44vfz09/
      4RMPhQz+FEN3dyn3/vBDu95jG+CqT9xwnjE7ctS59SkchpEbq8B+VJ7ZtLx1FilFOV15rvaR
      25uOs93E8zfCDHG+/sRCHnvkH/y3aF8tVQ2g/8rfwrz4uTppRrEKopZcShWZvf7ytUodXhNX
      jHVYa7nuc8akPNhFVq1l1Vrub9+9yIY40bqq9mBtop8MU3MLt3sb9g/Ii5ozNzOjfBwVYxKt
      raw4kdrrN6J18KYWLZ5CQdwSO2zJccCEego6X98/FZmfbPFIFvr24r0vfm9bwB/daT5IvPrm
      Of/93/3HvPXg29P7P7vq+Z/+9/+P33/tPv/Zv/fDtOGDexR8J+OxT7tsHRf7KhBrjbBqHSkV
      nDWc76Y6nDGGxgnOWmIsNN6w7SNjLKScKflQ26UpY4zBiSPf/wNkf/f4PjpumXpHt6zEd82O
      i6sDN29uqhE3s/YOyjgJTeOxRo8knLap8ipG4M7GY0S42NfFp0AbElqqsK61BS+O1gu7Xkkm
      EN0SGw8IinEBRdgNif2Y6VzGGUMxCUlVqe16aXVNxNhYx3u25sEpWbwHmYv6ki1GEpYGpVSk
      5reRsjwUDvv2F7KopZ+6imQNH2wDfOPeFf/N3/mHnF317+l1qvArX36NXAr/5b//o1XO/rsk
      Ht8ATeHWuj2SO4RaoMVUpcKLJGIeub0RTMVQVhU5hJtdFYKadCTnTGMXFM2kEh/7+rVoFdM9
      KM5Z2ga22wM564xHKrRtwDvLNCV2u6qQHIKj61ra5iHM4v7lNKNK67WNKE2IxGgrvDsZ8IIz
      lk0HuyERzSm30hvEsccv1qDKZuEq0M45ikSG0TFEmSEZmcZnrH2oUi2mwpitZKbYMVN/GaNj
      EQLGVISmPsE++fqwrve4/oD+MajYbw6dd6STAOpIGaZU0A/gkTfGxP/4i196z4v/0fi13/46
      n3rhFv/uj3/6u6ZAfoIqRESzm7+QCi4r+ZxpNIyjQ13BzVRcM6cHnoYpj4hViuiMy5xTFB15
      0okmInUiHBPeO6wrPP/CHYa+WrAuXS2mSyksl7UeSKm6vF/nmkqVWUlFjzdcUBqTEFGCibSh
      0Pgl03TAlkAbGraD4jaB/MCRxh7Tdox5j8URnCEyEFiQcma9mNgeGlJylGJYLR52ZcRVsSsb
      D9B0dYo8BpZtYtMumOKAkQ41ehTOfTRKMZU8YzLGfHOl8Xh401bn+Pn2GuMYhoFlI9xat+z2
      j7/HtxOqyi/9xqt85Rtn3/qHv0X83V/+HX7iB17k1ubJbkF/3uIJgzClz1u8CVgJ5HSBtRlv
      O4YpkRO0q0AswywotSLHRCE90rWYOz86YTBk69HP/0do3HO9TOXGy3ivLBeLCovXXN+3A0+H
      MTMnOOdqjSSCM4qS8G7O12Ml2z962nijnK46xpQpJuJkwZgOiK3p1DSOVVkORxHBHO4yLAOI
      EnWa12BFmbY+se/DzBvQ4+DsuKGtq2jRPGGkMEZPysIwGbw71FpIA1HTTFu8bl0aCglrC0br
      Z0lJsDZWQN4318OAM9U4Q8RUP+cYEZPY9z2tGTiM4OxDHvJ7iZgKf+/Xv/K+XvvN0Y+Jv///
      fpX/8F//3HfFU+AJwlgQTL3RJUesVZSb+CBMKEx5puctKltrqhr7zgYKGS0GTGLKPc54vG0p
      eqB87t/CqMPgahfHCjnG+T2qVZErbS0WRSk5V/slOKoma9YZRVpv7Nmutl8fjVSEYRzo2jUx
      DbOwrkGlYNRgZWLTNKh6ol3Qph1TjhjnjpPV62WqKHlGnS7aiVweVXZ7d1S4dyIXIWfLMFbR
      rsZYrnpD2xiUCpnoGktrE6lESpk4TCtEILiEkXJ8/0efnFYciKOPiqol5wEtCd+UGS7ycDbw
      XuPVt85589sser+d+Cf//HX+gy9+7rtiUv3YBoijxSA0wZIQ7j9w3LzpiHmsfrmayVisVIEn
      1WoPqrNasopi1NLaVe3RUwkjRg3WVkO4qBND7hEskqv8+Jj3qCiOllwmilSXlYISdcBkB2VB
      6w1F4e7l+FCUS6vmUFEQowxZcXFAUZythtPed6gWnGvYDZnQJDR4ZIrzwO2RW6FCjIX94OuG
      U0PMhuCnd98smWVKSiZLoaR6DQWG6EAtvsmAofHKxaF6BuSZv56y4+kTzzuXCW8NVwfwtmKT
      qrm4xVshFZ051FXBzlnDiTe1nfYh6IH+wdfuf+BrPBqv371i109/4nzg6vw+hBWb5Z+tmt3j
      fIApsj/0LLqG9aqe8mfnW8ZxIvhagO73O7quela98PxNYhxp7IKs1cVRVWY8f/XLIgvOheqR
      m8cZMNccT/WcUtWCmE3yrAkUBsRY0mTpo6EUoZTIojF0wR77/TKnLMu2MKaaqjRhIhZwGiia
      yBJx2pB0wuLpGsHYhhgq14BxhKOsYD3595OpTpKAsdXc4rH2pAjZOkwcyYCxBaI99uPtbGG6
      bCKlNHTBYo0QS4UxG6mndhcst9aWu5epKtwJ7MfMorGMsaCpkEvdFMFblo1FDg+qwcem411i
      qe8j3jn/8C1O757v//gNMNzjl3/tN2kax0//9Bfx30FjvW+OxzaAm4tP76pWvbNC0wSMwGLR
      EYLHWmGaIm0bQAQjVSLFuKqzfz3c0iKkFMlSJQ2HvEc1E8zyocQ4pfoDl1A7JlJADcEu2Q3K
      mCeW7VTlB5Nj18MY6+eyprBoI/1omJLB2kyM85ygGIzNJOprUxlRUy2MnIYqJuXsjLmPFMCb
      hmE0taMy1zKdF8ZkiMnQNdCEhzMOAYoYnCZELCnJDJWo7dBchO0IN5aerAfatpJwluKq2ybK
      EEdOFi1DHLixahBNKJmTruC356yMpV8/jycRhx122pHVofszTsqOq90tOD3lgzDirxlxH2ak
      8id0tMIJf+Un/zK/+89+nVzA/xl2TR/bAIulJbgFoKR4welJ9aPtFpZShMP+kuWixYf6CO7j
      ZW3HFSGOs1Zn3QI1/Sgj6gpTrhujetkqWQsWC1KpkqpK0omYB2zxWGPwrmBsJNh6ei+bwMJb
      nBUuDhPBTyiJ4C2HIVRMUjHs+4aumVBTi3Iplizz02leKCY7sikk6/E5MRUhMYIxFPVkFbzN
      pGIJPs16nI9OaWuo9dg0UmJmjC1NSJW5Vgw5C1mrUJaIUORQld+uc7e5npnyHkGI+YBlgRWh
      PHgdO16y706RxYJhclhjSWHDYUzY5bPQ36UbL5kuMxhB2vdnkHG6+vDTkD/xmsbyym/9Ouvn
      Pn10+fyziid0geZTXDOqA8bcmcVsC6lAKVXE1RJIJVLlPOofzjfE3ONMqGlMyTgTKJIrr7ZU
      JYQxH2jtcu6q1BCpfNdJdDa8SMQkWMecWoETizjDZR8RyYhRVA0xNhiTseK4tYLLPjOMHrQ+
      BRrk2KESlQrXMAFTLGob3Jy6jVNgipWZhUIbMrlkpujp2hFnHx9o5dBixyvixSVuGQChaydy
      tvSDr0VxAcFiDFgpeJ2LfRWyzJ0fATMLCOjujG68orct5eQ2lETJMrv1WJxTGm/IekLe7nH9
      HieZYjfvaxF84rnT9/W6Py7Wi8Dtkz+pDWr5kb/6Mx/qe77feIIsyixVkndAe4Qd5KIYzNF0
      IpeEKW5OWSpl0doq96HojPUxJK1FsbVVRSGWvg7XtDK0qnn03BwVg8GSGDBlwbIRJi2z0gKo
      raZwpWhNG3KiFAG1bLqKAzIWuiYTTMv5PqGTo1lcD+sAMz+fSqFpFsSwQnZvoyXhnJCLJxeH
      d6UqR4RILmb2M3jCabXcMOwvuZnus8sWbVdHGHQTIsMYUCm0trY+W7dhSocqqlukMugKFJvx
      piVPE+7qdSKGdPOZ+uSIBqSyzkrJlbsQC65d41efYZpG9inTtu+v9/7Zl+6waByHMX3rH/42
      4gc/9ex31DD7g8Rj2ZcYM0NxB1RasmYSiSFOGFMN5ZxpCGGBc20dzsyLH2q/2pla/FxzeVWV
      lBJOHAu3oXVrUukZci2+dP5PEFq7IsiiSqfkjNWA04BVzzQNxDiis3y6FUvKlpOlm/HDFZBn
      ZtSlEWiayGUPTtqjCG61cMr045Ys1SMgHjL7vmGKNUUrKjSumgWedJ5pCpTy7tulKLK9IMyC
      vovdXdhfIlIBc95lRCoYYpqlUA7DrkIsqCe+FoOqQVKgxAznX0MxTDeeQ5zHm5bgutoqJleJ
      lVI3sKAVeiKO5WpDeZ+F8GbZ8Jc//7H39donxb/5r37yu2IGAE/YAGf7QsST5GnULEga2A6B
      ZXuCd0sWqw3eBbaDZZ8c4jqs6yg4xlzrhSk7VDxFPMZYvK/dlpSmudMjNQURw1gOjGl/hAGI
      yEzFNOBmhxepeqXZRMQaWlc3lDfdkTPbmMV8TVc1M0sPkgguc7qQR4j8zCJTM8WxXSLGYlKc
      Nz4EV2q9Mzr2h5aYC+tO6PzDQZOqIg/eYbW/zyCO3eapOrXe3kXH/vg+q8VEGyJqlLGMmCNe
      p3ZuzAw3sUbQwwW5OeWwfhnTbuZDwdH4QFboWs+iC6zXHaFpMdax3Vd5dDHmSV/ntxUiws/9
      1GdYth8ASzHHj372eT7z0p0PfJ3vVDx2xxRljIXLA5zvMxf72ru+e5W56JUHu8Jlr0c+6/1t
      5GrIXBwy964mvnE2Ya3lwS7xYFfd26vSs5vlDSvX1ZsWZxpSGbDGIY/0s421lJJJOZFkZGKP
      GKnwaSlYa9CSieOAk1yXkgjeNHUgZVtau6KZh1tKJslIEx5NEWTeCArtmrZc0jYTqoJ3mWUD
      OVsW7YQxOg/0audGU8Td+warccvOrUlPfYzSrcg2VB5DSse7aQScsTQOrINSAs50LNwGb9vq
      P+Y8134IV2mJuAVCS5AND+737A4TjfcMI4wTXG0nLi4PXG0nurYjFWFK5QOlHc/cXPGf/Ns/
      +IGGV7dPFvynf+0LmO+S9AeeUANYU7mqJ8t6GuQZa3+ycAxTYdEYNm3t80+p/v0wFRpnCN6w
      bCwPthPLxjGmh7iZmrvKI/l+zX8rtsW8i+mUNRIZsAQyGcEQy1DlR9yKLJbGO1KajotfVYll
      nDE39VpNqCdnloiThmHutlyHquIIDFHxU88hK4sGrFWCUw4TXO48bbB4m6rC9TTRnL2J18R2
      cYu8uo0z1Uu5X90iXL2FnXrKcj3/PoWsGcFit+e4/oKJBZw+i4ZF5SKoYrZvo27BatWxWXe8
      8855VePIdZJ9ebklpYy1jtWyxVrDdtuTU8Ray2LtiDnzfhE4IsIXf+jjXOwG/tdf+p1q6vEe
      4uam42//zZ/k5ub9wTH+rOKxDXDaXmFkjRhfG35GaexELobTzuFMtQttZaJrDDEm1haCD5y2
      Fgy03uOkdjm0VHJ3KdX6M6dUNT+57pabyiKb25O5RKZcVRxUC862FI2VXSbCmA/z0K06tDvz
      0BnOiJ0NOBRr/MxM86QyEXV49+IHTHE151newMZLfLpEltVzN9gObwecS0yxziDClDAPXkeB
      3Y1n0XZNGZV8dUVIW7o8ISh+2nMYBjQrdtHWJ83+itXuHskEWunh7I/YLV6k3dwgHy7w0wXa
      LbjsR1JKWGfJqUrI9MNE2wR6IqtlyzBM5FxYLBqMNeRUGGKhsR/s5BUR/vpf+Qx3Tpf8wt/7
      TS53TxKs/KbXAJ/9+B3+i7/+Izxza/WB3v/PIh53it++jbWL2QxPqQbNdXnGaFm1zRGg5nw4
      KjenrCy67rFGiZZCjFUQtp5o1fXFWs+Q9+TZi6wu5Ao2SyVCUawEMNWU2kkzn+7XWspajbpN
      g7F1sDSWA9XjrNDZDUqpeButWv5HqiHg3ryPPSSKZMgZf7gku0BplzjbICrEUvBGiBlcW7Bu
      SzSO8cYzSPj/2zuT5biu5Ax/eYY7FQaKpEiFpGZLvWit/AL2K/j5/B4OP4E39tbhRS9ku0MR
      VktqSoRIAFV3OEN6kbcKAAENlGm7ZSIZhWChBlwUzpSZ/9DZ+3z7JZsyAsJOI75MtMGTqpi1
      1OMPYXdBv3tFlUB9/BloJrz4d1yZKRIJLCxugPeeQWjJudB2ppyxnQwPpQonQyAX42l8e75Q
      1axW2+iI3srXw7B5KwPj7HzkH/7pc/7xX77g+4vpFtkmBsenHzzgb//69/zNXz37X+MAzP/8
      d6Q//P1be7/bwli7C2IwBxJVw6hXCrjKUqAPA1ryAa05ly01V9ICR0eba7Bky+7SMiNAWBlT
      OVnvIMl88N0FK4EKmBmHCl4jznsWLKFsVnSprkYZqgVXI95FqiS7RgC1BNtkx83x0omnXmOp
      qULzr/9B8+gJ9cV3uEePrdT7+ee43/wGmoh+8w3uww+pr86ttTefsTx7RH70AeLteKi10n/z
      R6Io527DKbu9uiKqcEFLEKUtM3MYcI9/R5aWLnrKssM//wNelKSB8fRT2n7DvGQKnhj92hyr
      nPSBy6mw6Uzw69WY2U6Z9zZxlUqxzy3lwvHR263pzynzxdcv+c/n55zvZoJ3PD4d+OSDB3zw
      6OhXL8h7uw/gxDA6amQS0UJJGScBx8J2uiRKpGtbW4vFWunON8zzYivFHsIb/Dr4bxrYJl1W
      +LSytz5C7ajUMKyJq8lhBWkomqyjvP+3+g54Zxzi7NK1sptSaqZopvWDVZRWvm5RkxDxBDt2
      TZMN/q5Fnz/HffQRcrSBqsiHH8LxCbw4g9MTks7k9z++Ud6ry0J0MLqO0j+gbCeyQidW0Tpm
      Yq6e8+4BzcOPydrRRAMIig/M0tHWEecNIA2wpAQhME+FB4Nxn8fFHjvfZY56zzhbzhG87Zil
      ZuZyiePtn7/bGPjs2WM+e/b4rb/3X0LcNsjAmk5Z55XNtdCGDVorgUiMhuGRNdNv3QbpZhzx
      1ja4LIl5TiYl7pytwqJIcUTXmVoyy6HyIJgxNFFtE/To3QAACvhJREFU1a57WqEdeuw5AI7g
      IsE1LGXEa6SQ1krSvqsqLHVcQWfNavu6NvlcoUaQ3RY9fwmq6HaLlIy87KHr7X5vA0q3l9B3
      e+QdpQqSZ7pXf0aAXfOQGgcmjfSSqHrlZxYEmjQzX1zQ9kp+9Zxa1Yg4KDtaXBW67Z+Y4++I
      MVBEGKJjXAp9E1iKGXHv5sLLbSZ4oeQri9qqgugA+sugEO9y3CGL4ihqeH4vwQaQ9+A8eUn4
      taxpPr4KoqZmXDPODXaKXwd000STQJwXsy8NE8FFqi+ggarZJBU1W0dZoFJIY0F8pm3aFV59
      XW9IV3Cb6WKqU4K2+NogwfyN90erPfYo67L+fw/4V5bPniHXzrUKNN/9CV8z05NnvJ7M6DXY
      hisLzdlXuFpYxOOlEFtlfvQRU1pMGVvEBAUk084XnG6/pG4FTyXhKeGI5Bqa4cRW8hf/Rswj
      2dkZvouOi1w5HxOb1v4Om9Z0mZZcD7fGO7xzONeQ800Nofv46biTwr8UA/dY8tmjlUPiKqza
      m6orH6DagVcSqZohnvED9AAg67qWUiq7MaMx0MWBOY3kAlJ1PW5Zxch56LsNcxlt92jMTEMU
      iirOX2GD9nmGugoZKGtXaSWVCEJ0HanerAABa+Po2n0gdRua7Rk1Z1zb3XocQHOiOfuKlsxW
      OgYxNpgI4L2ZCEoLJeKk4l0l12PmF19TJDBqy6P8Z3xdGI8/YTNYryK1D3Dn3+AefErXBrar
      o73zwpQql1Ohbz1HrT8YjEyLMi0LezDncet4OynwuxO3+QB1h3eRzh9hnUpLxuZcD1uvW+ES
      2DPowpEJ5da0kukV99qA895xtDkmpcQ8L4TQ0PbDIYla6njYUUQqIgVNyjLJQTRWVcmLELwY
      pkcrPhgZR7znSnzBhruXyFLHm6v/j0TtBtid4aZLaG+jGbVkmhdf0etCIiIxch5PkY3ROr2v
      5GQyMkjGuUr0p1wmT/P0IUHgVBzLC2i6I9qmZcxWyfGPPkF33+NCgwuRWIVxTvRdy5QqJ70n
      FyWrEAI8OPLEEHBiOwJYvnYfbxZ3kOJ1TRzjfiwBJj9ig/uqkcX6uMMc3Fu/4ccwICJ2LFI1
      MrlzQqlKqtuDRKCoEF1DkEgOBR+vl98MpamrnCFVyLPS9cG+v6Iq4aqhBj9fQ1+ajiyBMO94
      HRampdC8+JpeEwXP5fET3NDbLodSq6NW4yR4J4esJWXhcipAWEUGCu3mt7Qu8+LCtJUenzSc
      XTqG5gmSlMFVvj3PfPyw5XysXE4ZVdM2FYHghDFVNo0BcYfG82qXOL43hn/juFW89RqpJbHk
      ibmOt3gWWg3Ls4+qhVTmAwMM1gH6I6uRsuaT624BVvNv3AAIc92RNSGv/3DsR8varQ4BxBta
      UtSv1SF3ANYdXvAzQ0RYYk/MMzWnA3tAVeH7M7o6k9Rx0T7ADf2BH6Aqh8Evzgg+y5ihGtbn
      4VHD3uWyql2d+sjpEDjuA+NScWLErk0X2c2F4Mza1Tl4/6QllRXqoCb/0gRn1lCy4olE/keI
      Lf/f4w6TvPWPWjJSHNraYAremTakcytwzSoOSxnJutDLMVeCKJWpXNK6ASfhAFWwtzcs0Fx2
      KGW9rSQV8QaJFn94H4NDLLcu0x63y83JwGYHAswvREUC1P6IsFwgl69gOEbHCb/sGMrIy+59
      2Gxwa40eoGRTsXPOyPzLZNcQO88yF9qwZeg3bHwlb18S+lN2NTBET+sKev6VYYG6gNNMvZxo
      pCU0gfE8EZsTmtjz9MTjxNkvrLpa15ZVfXviyVFA9dcjSPWXErcmQGEvdDvQX/P1MpSkYzdm
      godweKUNOMUcDYtmqhaq2iQYwil74JmqWaIudUslHRJVMNWDqunQtNqjRvN+8OuhCnl1TUDJ
      SuysgnT3wP9pvZ0b0fWkl3C0O7N8wDkynku/QY6Pcd5KrVVNAc570yBKS2WZKrF1hGiLSNt5
      pt1MCBF3/pxl+9IsmpxbedMwzxPx4iuyCnP7AHf8BN8fk86f4y+/ofAd39PSeNv1iphvs0HN
      G8Q5XIikGSR2cJ8Gv1HcmgDG1PJ4LzdygFortWSCty08lUpwDtUANTDrDpViPsLrCdpLcwPl
      KdjKXzQd1un9pm2dWgHNq6M86zFKLceQPQBi3w/Y19rD4Rh1O37u4L/2POdY3vsN7vy5neGP
      3kPbAR/cmoiDaqBW8MEg1DlDTspwElnGwjKZoJff0/3KQtm9RMWzXYRHx+6wI7bvf8r4ndBO
      L9DhEWE4QYF4+pTcHtPszmjSSK2FVCDWSzpn9rF+MVnipI4jn8mnv/0Zv+t9XI9bUIhlHgmr
      9FutpmpQcrKuMOswU6ViqgniKq1vmFKiyg5Ly6x61LjhhlkGQKoz8+uozGtndkUJ0lJINNKR
      dD7AGoI01iGuVtcHKIshWPfcgZux7jHiDjnJXbtEVZtIfegZy4UJgmlar+vqGo280uBcgtUA
      Yx5toIcolOTw4ZQQDAKtWPk1vfgGNzwku56kcNL5KwiBOLQk8nd/BPFc9B+xb9jNyeTIh9Y6
      6uejwcv7qAyNJ3pA6yocZsLCxycP33AIvNvxoxPAvpcpORMbM3Zm9fWttZLrhPpKH04QvJ3n
      VSm6mE8Yt0UxVSu7/Orq/mtVGtMRijgclbK6yOvhMVhForAcQRWWsdL0d6/09n6BqntS/h0T
      oIKXln7VDprqlqrl2uCHWtb8xK3JcYVpV2g6RwhCLSDa8HIyKMfpEMlVQZWjmPn6Qni4+g+X
      qqRifIrtlHl03DIuhq+qCn3jmJaK1sS8FLwX80QQGKIdf+zmcCIH555SYbPCsO/j58WdjbC6
      am2qVmoppm9/WLGEECIlZxRzPhQTPEcwsSyn/tCkej0Eh5dI1uUHd4H9ALdO7TXA3GuVHVWl
      FMU2mbuPO4Icjld72UZ79pUZRVVPs3qIWS+jHJ6lakpv3ldEVsWHbGf+fnONz+wVV62068XE
      audkvZM4NLx/YghOM79TuujJpbLpAtvZVKmPOtMNerXLpFx5ehI47hyNN+U3K4OWw+eQi7nS
      O+fW8sOvG5j2fxF3TgARKCWt2H1/6xgDxtpqXHfoqF7bSH60CmMD/zpmRdbE92qgF82r51i5
      tUOA5QuycgiWsdJtfgoDc/X64Nr1CJdX6uRE8EKtwly2lL3SBYIi5BIIIaNVyYvV8X0Q2sHf
      Tsp95fGxXBHo+0jKlXzxLeJbnp6aaoMTObhAVjVMz9A4vAOpiY0sMHQ4UVJRWCnPXeNJSSlZ
      adrIOI10bYtIXT+l+wnwpvEDE8AU3UTEPHTvWsn3+/D1+2so+x3kZuVGUePqYl3aqnldgcuh
      9AngxB1wSEl/SPF4Lc9G90Y0vrxyCsAkGftwRK6JMc0EdyV9DkaJ9C6T54qqI0Ql+rsnmyAU
      zUzjGcErUY6IsaHWCq++pGk21NhaF10ctRq6M6zVnXHKzFlxdeHp8gW+ackPPiWKkrMZbCtK
      LcrZ9xc8efKQkiu7Mh0oiEP/3+f0vmtxBx9gu9b6daUxmrzJm4Qevrw+ATDdT+rBUO+HBF2N
      KSarj9Zdj9tRQqsiv5AJdX3FrGq+AnbeN8K6uErNhvNx4apqdT03eD32Ev/Rt0Yo0oqfznD9
      KepbtFaqVlKx3koq9ZBb1bXL3TER8yW5eYBbRcNKKSsK1zGO6XAFpVS89zgn9H3LZmNl0Hme
      2e12v+hzeZfixgS4j/t41+K+dXgf73TcT4D7eKfjfgLcxzsd/wVmF3i6yrlwYgAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
